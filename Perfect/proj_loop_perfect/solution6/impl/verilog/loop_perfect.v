// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="loop_perfect_loop_perfect,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flga2104-2-i,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.894250,HLS_SYN_LAT=105,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=166,HLS_SYN_LUT=862,HLS_VERSION=2022_1}" *)

module loop_perfect (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_0_address0,
        A_0_ce0,
        A_0_q0,
        A_0_address1,
        A_0_ce1,
        A_0_q1,
        A_1_address0,
        A_1_ce0,
        A_1_q0,
        A_1_address1,
        A_1_ce1,
        A_1_q1,
        B_0_address0,
        B_0_ce0,
        B_0_we0,
        B_0_d0,
        B_1_address0,
        B_1_ce0,
        B_1_we0,
        B_1_d0
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_pp0_stage1 = 6'd4;
parameter    ap_ST_fsm_pp0_stage2 = 6'd8;
parameter    ap_ST_fsm_pp0_stage3 = 6'd16;
parameter    ap_ST_fsm_pp0_stage4 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] A_0_address0;
output   A_0_ce0;
input  [4:0] A_0_q0;
output  [3:0] A_0_address1;
output   A_0_ce1;
input  [4:0] A_0_q1;
output  [3:0] A_1_address0;
output   A_1_ce0;
input  [4:0] A_1_q0;
output  [3:0] A_1_address1;
output   A_1_ce1;
input  [4:0] A_1_q1;
output  [3:0] B_0_address0;
output   B_0_ce0;
output   B_0_we0;
output  [5:0] B_0_d0;
output  [3:0] B_1_address0;
output   B_1_ce0;
output   B_1_we0;
output  [5:0] B_1_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] A_0_address0;
reg A_0_ce0;
reg[3:0] A_0_address1;
reg A_0_ce1;
reg[3:0] A_1_address0;
reg A_1_ce0;
reg[3:0] A_1_address1;
reg A_1_ce1;
reg[3:0] B_0_address0;
reg B_0_ce0;
reg B_0_we0;
reg[5:0] B_0_d0;
reg[3:0] B_1_address0;
reg B_1_ce0;
reg B_1_we0;
reg[5:0] B_1_d0;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln23_fu_685_p2;
wire    ap_CS_fsm_pp0_stage4;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state11_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
reg   [0:0] do_init_reg_351;
reg   [0:0] do_init_reg_351_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_state12_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [4:0] i3_reg_368;
reg   [9:0] phi_mul_reg_383;
reg   [5:0] p_rewind_reg_398;
reg  signed [4:0] reg_427;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
reg   [4:0] reg_431;
reg  signed [4:0] reg_435;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
reg  signed [4:0] reg_439;
wire   [8:0] tmp2_fu_508_p2;
reg   [8:0] tmp2_reg_1170;
reg   [4:0] A_1_load_4_reg_1195;
reg   [4:0] A_1_load_6_reg_1221;
wire   [10:0] tmp1_fu_643_p2;
reg   [10:0] tmp1_reg_1236;
wire  signed [9:0] grp_fu_1066_p3;
reg  signed [9:0] tmp19_reg_1241;
wire   [0:0] empty_10_fu_653_p1;
reg   [0:0] empty_10_reg_1246;
reg   [0:0] empty_10_reg_1246_pp0_iter1_reg;
wire   [3:0] empty_13_fu_669_p3;
reg   [3:0] empty_13_reg_1250;
reg   [0:0] tmp_4_reg_1255;
reg   [0:0] tmp_4_reg_1255_pp0_iter1_reg;
reg   [0:0] icmp_ln23_reg_1259;
reg   [0:0] icmp_ln23_reg_1259_pp0_iter1_reg;
wire   [10:0] tmp6_fu_885_p2;
reg   [10:0] tmp6_reg_1263;
wire   [10:0] tmp15_fu_907_p2;
reg   [10:0] tmp15_reg_1273;
wire   [10:0] tmp17_fu_942_p2;
reg   [10:0] tmp17_reg_1278;
reg   [0:0] tmp_1_reg_1288;
wire   [63:0] zext_ln21_fu_999_p1;
reg   [63:0] zext_ln21_reg_1294;
wire   [9:0] next_mul_fu_1004_p2;
reg   [9:0] next_mul_reg_1300;
reg    ap_enable_reg_pp0_iter1;
wire   [4:0] i_fu_1010_p2;
reg   [4:0] i_reg_1305;
wire   [5:0] empty_16_fu_1057_p3;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_i3_phi_fu_372_p6;
wire    ap_block_pp0_stage4;
reg   [9:0] ap_phi_mux_phi_mul_phi_fu_387_p6;
wire   [5:0] ap_phi_reg_pp0_iter0_p_phi_reg_413;
reg   [5:0] ap_phi_reg_pp0_iter1_p_phi_reg_413;
reg   [5:0] ap_phi_reg_pp0_iter2_p_phi_reg_413;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire   [5:0] mul_i_i_2_fu_448_p3;
wire  signed [4:0] A_0_load_2_cast22_fu_460_p0;
wire  signed [4:0] p_shl15_fu_464_p1;
wire   [6:0] p_shl15_fu_464_p3;
wire  signed [7:0] p_shl15_cast_fu_472_p1;
wire  signed [7:0] A_0_load_2_cast22_fu_460_p1;
wire   [7:0] mul_i_i_3_fu_476_p2;
wire   [6:0] mul_i_i_4_fu_486_p3;
wire  signed [8:0] mul_i_i_3_cast_fu_482_p1;
wire  signed [8:0] mul_i_i_4_cast_fu_494_p1;
wire   [8:0] tmp3_fu_502_p2;
wire  signed [8:0] mul_i_i_2_cast_fu_456_p1;
wire  signed [4:0] p_shl14_fu_522_p1;
wire   [6:0] p_shl14_fu_522_p3;
wire   [7:0] p_shl12_fu_534_p3;
wire   [5:0] p_shl13_fu_546_p3;
wire  signed [8:0] p_shl12_cast_fu_542_p1;
wire  signed [8:0] p_shl13_cast_fu_554_p1;
wire   [8:0] mul_i_i_6_fu_558_p2;
wire  signed [4:0] A_0_load_6_cast24_fu_568_p0;
wire  signed [4:0] p_shl11_fu_572_p1;
wire   [7:0] p_shl11_fu_572_p3;
wire  signed [8:0] p_shl11_cast_fu_580_p1;
wire  signed [8:0] A_0_load_6_cast24_fu_568_p1;
wire   [8:0] mul_i_i_7_fu_584_p2;
wire   [8:0] p_shl6_fu_594_p3;
wire   [6:0] p_shl7_fu_606_p3;
wire  signed [9:0] p_shl6_cast_fu_602_p1;
wire  signed [9:0] p_shl7_cast_fu_614_p1;
wire  signed [9:0] mul_i_i_6_cast_fu_564_p1;
wire  signed [9:0] mul_i_i_7_cast_fu_590_p1;
wire   [9:0] tmp5_fu_627_p2;
wire  signed [9:0] p_shl14_cast_fu_530_p1;
wire   [9:0] tmp4_fu_633_p2;
wire  signed [10:0] tmp4_cast_fu_639_p1;
wire  signed [10:0] tmp2_cast_fu_624_p1;
wire   [3:0] empty_fu_649_p1;
wire   [0:0] empty_11_fu_657_p2;
wire   [3:0] empty_12_fu_663_p2;
wire  signed [4:0] A_0_load_4_cast_fu_691_p0;
wire   [7:0] mul_i_i_8_fu_695_p3;
wire  signed [4:0] A_0_load_8_cast30_fu_707_p0;
wire  signed [4:0] p_shl10_fu_711_p1;
wire   [7:0] p_shl10_fu_711_p3;
wire   [7:0] p_shl8_fu_723_p3;
wire   [5:0] p_shl9_fu_735_p3;
wire   [8:0] p_shl4_fu_747_p3;
wire   [5:0] p_shl5_fu_758_p3;
wire  signed [9:0] p_shl4_cast_fu_754_p1;
wire  signed [9:0] p_shl5_cast_fu_765_p1;
wire   [9:0] mul_i_i_14_fu_769_p2;
wire  signed [4:0] A_1_load_5_cast28_fu_779_p0;
wire  signed [4:0] p_shl3_fu_783_p1;
wire   [8:0] p_shl3_fu_783_p3;
wire  signed [9:0] p_shl3_cast_fu_791_p1;
wire  signed [9:0] A_1_load_5_cast28_fu_779_p1;
wire   [9:0] mul_i_i_15_fu_795_p2;
wire   [8:0] mul_i_i_s_fu_805_p3;
wire  signed [4:0] A_1_load_7_cast31_fu_816_p0;
wire  signed [4:0] p_shl2_fu_820_p1;
wire   [8:0] p_shl2_fu_820_p3;
wire   [8:0] p_shl_fu_832_p3;
wire   [5:0] p_shl1_fu_844_p3;
wire  signed [8:0] p_shl10_cast_fu_719_p1;
wire  signed [8:0] p_shl9_cast_fu_743_p1;
wire   [8:0] tmp8_fu_856_p2;
wire  signed [9:0] tmp8_cast_fu_862_p1;
wire  signed [9:0] mul_i_i_8_cast_fu_703_p1;
wire   [9:0] tmp7_fu_866_p2;
wire  signed [9:0] grp_fu_1074_p3;
wire  signed [10:0] tmp10_cast_fu_876_p1;
wire  signed [10:0] p_shl8_cast_fu_731_p1;
wire   [10:0] tmp9_fu_879_p2;
wire  signed [10:0] tmp7_cast_fu_872_p1;
wire  signed [10:0] mul_i_i_14_cast_fu_775_p1;
wire  signed [10:0] mul_i_i_15_cast_fu_801_p1;
wire  signed [9:0] p_shl2_cast_fu_828_p1;
wire  signed [9:0] p_shl1_cast_fu_852_p1;
wire   [9:0] tmp16_fu_897_p2;
wire  signed [10:0] tmp16_cast_fu_903_p1;
wire  signed [10:0] mul_i_i_16_cast_fu_812_p1;
wire  signed [10:0] tmp19_cast_fu_913_p1;
wire  signed [10:0] p_shl_cast_fu_840_p1;
wire  signed [5:0] A_0_load_8_cast30_fu_707_p1;
wire  signed [5:0] A_1_load_7_cast31_fu_816_p1;
wire   [5:0] tmp21_fu_922_p2;
wire  signed [6:0] tmp21_cast_fu_928_p1;
wire  signed [6:0] A_0_load_4_cast_fu_691_p1;
wire   [6:0] tmp20_fu_932_p2;
wire  signed [10:0] tmp20_cast_fu_938_p1;
wire   [10:0] tmp18_fu_916_p2;
wire  signed [11:0] tmp6_cast_fu_951_p1;
wire  signed [11:0] tmp1_cast_fu_948_p1;
wire  signed [10:0] grp_fu_1083_p3;
wire  signed [11:0] tmp15_cast_fu_963_p1;
wire  signed [11:0] tmp13_cast_fu_960_p1;
wire  signed [11:0] tmp17_cast_fu_972_p1;
wire   [11:0] tmp12_fu_966_p2;
wire   [11:0] tmp11_fu_975_p2;
wire   [11:0] tmp_fu_954_p2;
wire  signed [11:0] acc_V_1_fu_981_p2;
wire  signed [25:0] grp_fu_1092_p2;
wire   [24:0] empty_14_fu_1016_p1;
wire   [24:0] neg_mul_fu_1019_p2;
wire   [5:0] tmp_2_fu_1025_p4;
wire   [5:0] tmp_3_fu_1035_p4;
wire   [5:0] empty_15_fu_1044_p3;
wire   [5:0] neg_ti_fu_1051_p2;
wire   [4:0] grp_fu_1066_p1;
wire   [3:0] grp_fu_1074_p1;
wire  signed [9:0] grp_fu_1074_p2;
wire   [3:0] grp_fu_1083_p1;
wire  signed [10:0] grp_fu_1083_p2;
wire   [12:0] grp_fu_1092_p1;
reg    grp_fu_1066_ce;
reg    grp_fu_1074_ce;
reg    grp_fu_1083_ce;
reg    grp_fu_1092_ce;
reg   [5:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_296;
reg    ap_condition_291;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

loop_perfect_mac_muladd_5s_5ns_5s_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
mac_muladd_5s_5ns_5s_10_4_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(A_1_q0),
    .din1(grp_fu_1066_p1),
    .din2(reg_427),
    .ce(grp_fu_1066_ce),
    .dout(grp_fu_1066_p3)
);

loop_perfect_mac_muladd_5s_4ns_10s_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_5s_4ns_10s_10_4_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_435),
    .din1(grp_fu_1074_p1),
    .din2(grp_fu_1074_p2),
    .ce(grp_fu_1074_ce),
    .dout(grp_fu_1074_p3)
);

loop_perfect_mac_muladd_5s_4ns_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mac_muladd_5s_4ns_11s_11_4_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_439),
    .din1(grp_fu_1083_p1),
    .din2(grp_fu_1083_p2),
    .ce(grp_fu_1083_ce),
    .dout(grp_fu_1083_p3)
);

loop_perfect_mul_mul_12s_13ns_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_mul_12s_13ns_26_4_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_V_1_fu_981_p2),
    .din1(grp_fu_1092_p1),
    .ce(grp_fu_1092_ce),
    .dout(grp_fu_1092_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_291)) begin
        if ((do_init_reg_351_pp0_iter1_reg == 1'd0)) begin
            ap_phi_reg_pp0_iter2_p_phi_reg_413 <= p_rewind_reg_398;
        end else if ((do_init_reg_351_pp0_iter1_reg == 1'd1)) begin
            ap_phi_reg_pp0_iter2_p_phi_reg_413 <= empty_16_fu_1057_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_p_phi_reg_413 <= ap_phi_reg_pp0_iter1_p_phi_reg_413;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln23_reg_1259 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        do_init_reg_351 <= 1'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln23_reg_1259 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        do_init_reg_351 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln23_reg_1259 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        i3_reg_368 <= i_reg_1305;
    end else if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln23_reg_1259 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        i3_reg_368 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln23_reg_1259 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        phi_mul_reg_383 <= next_mul_reg_1300;
    end else if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln23_reg_1259 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        phi_mul_reg_383 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((do_init_reg_351 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((do_init_reg_351 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_439 <= A_1_q1;
    end else if (((do_init_reg_351 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        reg_439 <= A_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_351 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        A_1_load_4_reg_1195 <= A_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_351 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        A_1_load_6_reg_1221 <= A_1_q0;
        tmp19_reg_1241 <= grp_fu_1066_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_reg_pp0_iter1_p_phi_reg_413 <= ap_phi_reg_pp0_iter0_p_phi_reg_413;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        do_init_reg_351_pp0_iter1_reg <= do_init_reg_351;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        empty_10_reg_1246 <= empty_10_fu_653_p1;
        empty_10_reg_1246_pp0_iter1_reg <= empty_10_reg_1246;
        empty_13_reg_1250 <= empty_13_fu_669_p3;
        icmp_ln23_reg_1259 <= icmp_ln23_fu_685_p2;
        icmp_ln23_reg_1259_pp0_iter1_reg <= icmp_ln23_reg_1259;
        tmp_4_reg_1255 <= ap_phi_mux_phi_mul_phi_fu_387_p6[32'd9];
        tmp_4_reg_1255_pp0_iter1_reg <= tmp_4_reg_1255;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        i_reg_1305 <= i_fu_1010_p2;
        next_mul_reg_1300 <= next_mul_fu_1004_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln23_reg_1259_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_rewind_reg_398 <= ap_phi_reg_pp0_iter2_p_phi_reg_413;
    end
end

always @ (posedge ap_clk) begin
    if ((((do_init_reg_351 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((do_init_reg_351 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_427 <= A_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((do_init_reg_351 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((do_init_reg_351 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((do_init_reg_351 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_431 <= A_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((do_init_reg_351 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((do_init_reg_351 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_435 <= A_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_351 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp15_reg_1273[10 : 1] <= tmp15_fu_907_p2[10 : 1];
        tmp17_reg_1278 <= tmp17_fu_942_p2;
        tmp6_reg_1263 <= tmp6_fu_885_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_351 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp1_reg_1236 <= tmp1_fu_643_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_351 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp2_reg_1170 <= tmp2_fu_508_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((do_init_reg_351_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_1_reg_1288 <= acc_V_1_fu_981_p2[32'd11];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        zext_ln21_reg_1294[3 : 0] <= zext_ln21_fu_999_p1[3 : 0];
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            A_0_address0 = 64'd9;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            A_0_address0 = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            A_0_address0 = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            A_0_address0 = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            A_0_address0 = 64'd2;
        end else begin
            A_0_address0 = 'bx;
        end
    end else begin
        A_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            A_0_address1 = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            A_0_address1 = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            A_0_address1 = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            A_0_address1 = 64'd1;
        end else begin
            A_0_address1 = 'bx;
        end
    end else begin
        A_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        A_0_ce0 = 1'b1;
    end else begin
        A_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        A_0_ce1 = 1'b1;
    end else begin
        A_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            A_1_address0 = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            A_1_address0 = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            A_1_address0 = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            A_1_address0 = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            A_1_address0 = 64'd9;
        end else begin
            A_1_address0 = 'bx;
        end
    end else begin
        A_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            A_1_address1 = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            A_1_address1 = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            A_1_address1 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            A_1_address1 = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            A_1_address1 = 64'd1;
        end else begin
            A_1_address1 = 'bx;
        end
    end else begin
        A_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        A_1_ce0 = 1'b1;
    end else begin
        A_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        A_1_ce1 = 1'b1;
    end else begin
        A_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_0_address0 = zext_ln21_reg_1294;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        B_0_address0 = zext_ln21_fu_999_p1;
    end else begin
        B_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        B_0_ce0 = 1'b1;
    end else begin
        B_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_0_d0 = ap_phi_reg_pp0_iter2_p_phi_reg_413;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        B_0_d0 = 6'd0;
    end else begin
        B_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_4_reg_1255_pp0_iter1_reg == 1'd0) & (empty_10_reg_1246_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_4_reg_1255 == 1'd0) & (empty_10_reg_1246 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        B_0_we0 = 1'b1;
    end else begin
        B_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_1_address0 = zext_ln21_reg_1294;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        B_1_address0 = zext_ln21_fu_999_p1;
    end else begin
        B_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        B_1_ce0 = 1'b1;
    end else begin
        B_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_1_d0 = ap_phi_reg_pp0_iter2_p_phi_reg_413;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        B_1_d0 = 6'd0;
    end else begin
        B_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_4_reg_1255_pp0_iter1_reg == 1'd1) & (empty_10_reg_1246_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_4_reg_1255 == 1'd1) & (empty_10_reg_1246 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        B_1_we0 = 1'b1;
    end else begin
        B_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln23_reg_1259_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_296)) begin
        if ((icmp_ln23_reg_1259 == 1'd1)) begin
            ap_phi_mux_i3_phi_fu_372_p6 = 5'd0;
        end else if ((icmp_ln23_reg_1259 == 1'd0)) begin
            ap_phi_mux_i3_phi_fu_372_p6 = i_reg_1305;
        end else begin
            ap_phi_mux_i3_phi_fu_372_p6 = i3_reg_368;
        end
    end else begin
        ap_phi_mux_i3_phi_fu_372_p6 = i3_reg_368;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_296)) begin
        if ((icmp_ln23_reg_1259 == 1'd1)) begin
            ap_phi_mux_phi_mul_phi_fu_387_p6 = 10'd0;
        end else if ((icmp_ln23_reg_1259 == 1'd0)) begin
            ap_phi_mux_phi_mul_phi_fu_387_p6 = next_mul_reg_1300;
        end else begin
            ap_phi_mux_phi_mul_phi_fu_387_p6 = phi_mul_reg_383;
        end
    end else begin
        ap_phi_mux_phi_mul_phi_fu_387_p6 = phi_mul_reg_383;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln23_fu_685_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_1066_ce = 1'b1;
    end else begin
        grp_fu_1066_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_1074_ce = 1'b1;
    end else begin
        grp_fu_1074_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_1083_ce = 1'b1;
    end else begin
        grp_fu_1083_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_1092_ce = 1'b1;
    end else begin
        grp_fu_1092_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_0_load_2_cast22_fu_460_p0 = A_0_q1;

assign A_0_load_2_cast22_fu_460_p1 = A_0_load_2_cast22_fu_460_p0;

assign A_0_load_4_cast_fu_691_p0 = reg_427;

assign A_0_load_4_cast_fu_691_p1 = A_0_load_4_cast_fu_691_p0;

assign A_0_load_6_cast24_fu_568_p0 = A_0_q1;

assign A_0_load_6_cast24_fu_568_p1 = A_0_load_6_cast24_fu_568_p0;

assign A_0_load_8_cast30_fu_707_p0 = A_0_q0;

assign A_0_load_8_cast30_fu_707_p1 = A_0_load_8_cast30_fu_707_p0;

assign A_1_load_5_cast28_fu_779_p0 = reg_439;

assign A_1_load_5_cast28_fu_779_p1 = A_1_load_5_cast28_fu_779_p0;

assign A_1_load_7_cast31_fu_816_p0 = A_1_q1;

assign A_1_load_7_cast31_fu_816_p1 = A_1_load_7_cast31_fu_816_p0;

assign acc_V_1_fu_981_p2 = (tmp11_fu_975_p2 + tmp_fu_954_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_291 = ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4));
end

always @ (*) begin
    ap_condition_296 = ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_p_phi_reg_413 = 'bx;

assign empty_10_fu_653_p1 = ap_phi_mux_i3_phi_fu_372_p6[0:0];

assign empty_11_fu_657_p2 = ((ap_phi_mux_i3_phi_fu_372_p6 < 5'd10) ? 1'b1 : 1'b0);

assign empty_12_fu_663_p2 = (empty_fu_649_p1 + 4'd6);

assign empty_13_fu_669_p3 = ((empty_11_fu_657_p2[0:0] == 1'b1) ? empty_fu_649_p1 : empty_12_fu_663_p2);

assign empty_14_fu_1016_p1 = grp_fu_1092_p2[24:0];

assign empty_15_fu_1044_p3 = ((tmp_1_reg_1288[0:0] == 1'b1) ? tmp_2_fu_1025_p4 : tmp_3_fu_1035_p4);

assign empty_16_fu_1057_p3 = ((tmp_1_reg_1288[0:0] == 1'b1) ? neg_ti_fu_1051_p2 : tmp_3_fu_1035_p4);

assign empty_fu_649_p1 = ap_phi_mux_i3_phi_fu_372_p6[3:0];

assign grp_fu_1066_p1 = 10'd19;

assign grp_fu_1074_p1 = 10'd11;

assign grp_fu_1074_p2 = ($signed(p_shl6_cast_fu_602_p1) - $signed(p_shl7_cast_fu_614_p1));

assign grp_fu_1083_p1 = 10'd13;

assign grp_fu_1083_p2 = ($signed(mul_i_i_14_cast_fu_775_p1) + $signed(mul_i_i_15_cast_fu_801_p1));

assign grp_fu_1092_p1 = 26'd6554;

assign i_fu_1010_p2 = (i3_reg_368 + 5'd1);

assign icmp_ln23_fu_685_p2 = ((ap_phi_mux_i3_phi_fu_372_p6 == 5'd19) ? 1'b1 : 1'b0);

assign mul_i_i_14_cast_fu_775_p1 = $signed(mul_i_i_14_fu_769_p2);

assign mul_i_i_14_fu_769_p2 = ($signed(p_shl4_cast_fu_754_p1) - $signed(p_shl5_cast_fu_765_p1));

assign mul_i_i_15_cast_fu_801_p1 = $signed(mul_i_i_15_fu_795_p2);

assign mul_i_i_15_fu_795_p2 = ($signed(p_shl3_cast_fu_791_p1) - $signed(A_1_load_5_cast28_fu_779_p1));

assign mul_i_i_16_cast_fu_812_p1 = $signed(mul_i_i_s_fu_805_p3);

assign mul_i_i_2_cast_fu_456_p1 = $signed(mul_i_i_2_fu_448_p3);

assign mul_i_i_2_fu_448_p3 = {{reg_431}, {1'd0}};

assign mul_i_i_3_cast_fu_482_p1 = $signed(mul_i_i_3_fu_476_p2);

assign mul_i_i_3_fu_476_p2 = ($signed(p_shl15_cast_fu_472_p1) - $signed(A_0_load_2_cast22_fu_460_p1));

assign mul_i_i_4_cast_fu_494_p1 = $signed(mul_i_i_4_fu_486_p3);

assign mul_i_i_4_fu_486_p3 = {{A_0_q0}, {2'd0}};

assign mul_i_i_6_cast_fu_564_p1 = $signed(mul_i_i_6_fu_558_p2);

assign mul_i_i_6_fu_558_p2 = ($signed(p_shl12_cast_fu_542_p1) - $signed(p_shl13_cast_fu_554_p1));

assign mul_i_i_7_cast_fu_590_p1 = $signed(mul_i_i_7_fu_584_p2);

assign mul_i_i_7_fu_584_p2 = ($signed(p_shl11_cast_fu_580_p1) - $signed(A_0_load_6_cast24_fu_568_p1));

assign mul_i_i_8_cast_fu_703_p1 = $signed(mul_i_i_8_fu_695_p3);

assign mul_i_i_8_fu_695_p3 = {{reg_431}, {3'd0}};

assign mul_i_i_s_fu_805_p3 = {{A_1_load_6_reg_1221}, {4'd0}};

assign neg_mul_fu_1019_p2 = (25'd0 - empty_14_fu_1016_p1);

assign neg_ti_fu_1051_p2 = (6'd0 - empty_15_fu_1044_p3);

assign next_mul_fu_1004_p2 = (phi_mul_reg_383 + 10'd52);

assign p_shl10_cast_fu_719_p1 = $signed(p_shl10_fu_711_p3);

assign p_shl10_fu_711_p1 = A_0_q0;

assign p_shl10_fu_711_p3 = {{p_shl10_fu_711_p1}, {3'd0}};

assign p_shl11_cast_fu_580_p1 = $signed(p_shl11_fu_572_p3);

assign p_shl11_fu_572_p1 = A_0_q1;

assign p_shl11_fu_572_p3 = {{p_shl11_fu_572_p1}, {3'd0}};

assign p_shl12_cast_fu_542_p1 = $signed(p_shl12_fu_534_p3);

assign p_shl12_fu_534_p3 = {{reg_431}, {3'd0}};

assign p_shl13_cast_fu_554_p1 = $signed(p_shl13_fu_546_p3);

assign p_shl13_fu_546_p3 = {{reg_431}, {1'd0}};

assign p_shl14_cast_fu_530_p1 = $signed(p_shl14_fu_522_p3);

assign p_shl14_fu_522_p1 = reg_427;

assign p_shl14_fu_522_p3 = {{p_shl14_fu_522_p1}, {2'd0}};

assign p_shl15_cast_fu_472_p1 = $signed(p_shl15_fu_464_p3);

assign p_shl15_fu_464_p1 = A_0_q1;

assign p_shl15_fu_464_p3 = {{p_shl15_fu_464_p1}, {2'd0}};

assign p_shl1_cast_fu_852_p1 = $signed(p_shl1_fu_844_p3);

assign p_shl1_fu_844_p3 = {{A_1_q0}, {1'd0}};

assign p_shl2_cast_fu_828_p1 = $signed(p_shl2_fu_820_p3);

assign p_shl2_fu_820_p1 = A_1_q1;

assign p_shl2_fu_820_p3 = {{p_shl2_fu_820_p1}, {4'd0}};

assign p_shl3_cast_fu_791_p1 = $signed(p_shl3_fu_783_p3);

assign p_shl3_fu_783_p1 = reg_439;

assign p_shl3_fu_783_p3 = {{p_shl3_fu_783_p1}, {4'd0}};

assign p_shl4_cast_fu_754_p1 = $signed(p_shl4_fu_747_p3);

assign p_shl4_fu_747_p3 = {{A_1_load_4_reg_1195}, {4'd0}};

assign p_shl5_cast_fu_765_p1 = $signed(p_shl5_fu_758_p3);

assign p_shl5_fu_758_p3 = {{A_1_load_4_reg_1195}, {1'd0}};

assign p_shl6_cast_fu_602_p1 = $signed(p_shl6_fu_594_p3);

assign p_shl6_fu_594_p3 = {{reg_439}, {4'd0}};

assign p_shl7_cast_fu_614_p1 = $signed(p_shl7_fu_606_p3);

assign p_shl7_fu_606_p3 = {{reg_439}, {2'd0}};

assign p_shl8_cast_fu_731_p1 = $signed(p_shl8_fu_723_p3);

assign p_shl8_fu_723_p3 = {{reg_435}, {3'd0}};

assign p_shl9_cast_fu_743_p1 = $signed(p_shl9_fu_735_p3);

assign p_shl9_fu_735_p3 = {{reg_435}, {1'd0}};

assign p_shl_cast_fu_840_p1 = $signed(p_shl_fu_832_p3);

assign p_shl_fu_832_p3 = {{A_1_q0}, {4'd0}};

assign tmp10_cast_fu_876_p1 = grp_fu_1074_p3;

assign tmp11_fu_975_p2 = ($signed(tmp17_cast_fu_972_p1) + $signed(tmp12_fu_966_p2));

assign tmp12_fu_966_p2 = ($signed(tmp15_cast_fu_963_p1) + $signed(tmp13_cast_fu_960_p1));

assign tmp13_cast_fu_960_p1 = grp_fu_1083_p3;

assign tmp15_cast_fu_963_p1 = $signed(tmp15_reg_1273);

assign tmp15_fu_907_p2 = ($signed(tmp16_cast_fu_903_p1) + $signed(mul_i_i_16_cast_fu_812_p1));

assign tmp16_cast_fu_903_p1 = $signed(tmp16_fu_897_p2);

assign tmp16_fu_897_p2 = ($signed(p_shl2_cast_fu_828_p1) + $signed(p_shl1_cast_fu_852_p1));

assign tmp17_cast_fu_972_p1 = $signed(tmp17_reg_1278);

assign tmp17_fu_942_p2 = ($signed(tmp20_cast_fu_938_p1) + $signed(tmp18_fu_916_p2));

assign tmp18_fu_916_p2 = ($signed(tmp19_cast_fu_913_p1) + $signed(p_shl_cast_fu_840_p1));

assign tmp19_cast_fu_913_p1 = tmp19_reg_1241;

assign tmp1_cast_fu_948_p1 = $signed(tmp1_reg_1236);

assign tmp1_fu_643_p2 = ($signed(tmp4_cast_fu_639_p1) + $signed(tmp2_cast_fu_624_p1));

assign tmp20_cast_fu_938_p1 = $signed(tmp20_fu_932_p2);

assign tmp20_fu_932_p2 = ($signed(tmp21_cast_fu_928_p1) + $signed(A_0_load_4_cast_fu_691_p1));

assign tmp21_cast_fu_928_p1 = $signed(tmp21_fu_922_p2);

assign tmp21_fu_922_p2 = ($signed(A_0_load_8_cast30_fu_707_p1) + $signed(A_1_load_7_cast31_fu_816_p1));

assign tmp2_cast_fu_624_p1 = $signed(tmp2_reg_1170);

assign tmp2_fu_508_p2 = ($signed(tmp3_fu_502_p2) + $signed(mul_i_i_2_cast_fu_456_p1));

assign tmp3_fu_502_p2 = ($signed(mul_i_i_3_cast_fu_482_p1) + $signed(mul_i_i_4_cast_fu_494_p1));

assign tmp4_cast_fu_639_p1 = $signed(tmp4_fu_633_p2);

assign tmp4_fu_633_p2 = ($signed(tmp5_fu_627_p2) + $signed(p_shl14_cast_fu_530_p1));

assign tmp5_fu_627_p2 = ($signed(mul_i_i_6_cast_fu_564_p1) + $signed(mul_i_i_7_cast_fu_590_p1));

assign tmp6_cast_fu_951_p1 = $signed(tmp6_reg_1263);

assign tmp6_fu_885_p2 = ($signed(tmp9_fu_879_p2) + $signed(tmp7_cast_fu_872_p1));

assign tmp7_cast_fu_872_p1 = $signed(tmp7_fu_866_p2);

assign tmp7_fu_866_p2 = ($signed(tmp8_cast_fu_862_p1) + $signed(mul_i_i_8_cast_fu_703_p1));

assign tmp8_cast_fu_862_p1 = $signed(tmp8_fu_856_p2);

assign tmp8_fu_856_p2 = ($signed(p_shl10_cast_fu_719_p1) + $signed(p_shl9_cast_fu_743_p1));

assign tmp9_fu_879_p2 = ($signed(tmp10_cast_fu_876_p1) + $signed(p_shl8_cast_fu_731_p1));

assign tmp_2_fu_1025_p4 = {{neg_mul_fu_1019_p2[22:17]}};

assign tmp_3_fu_1035_p4 = {{grp_fu_1092_p2[22:17]}};

assign tmp_fu_954_p2 = ($signed(tmp6_cast_fu_951_p1) + $signed(tmp1_cast_fu_948_p1));

assign zext_ln21_fu_999_p1 = empty_13_reg_1250;

always @ (posedge ap_clk) begin
    tmp15_reg_1273[0] <= 1'b0;
    zext_ln21_reg_1294[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //loop_perfect
