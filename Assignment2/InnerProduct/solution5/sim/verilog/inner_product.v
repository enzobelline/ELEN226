// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="inner_product_inner_product,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg676-2,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.843857,HLS_SYN_LAT=9,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=820,HLS_SYN_LUT=805,HLS_VERSION=2022_1}" *)

module inner_product (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_0_address0,
        a_0_ce0,
        a_0_q0,
        a_0_address1,
        a_0_ce1,
        a_0_q1,
        a_1_address0,
        a_1_ce0,
        a_1_q0,
        a_1_address1,
        a_1_ce1,
        a_1_q1,
        a_2_address0,
        a_2_ce0,
        a_2_q0,
        a_2_address1,
        a_2_ce1,
        a_2_q1,
        a_3_address0,
        a_3_ce0,
        a_3_q0,
        a_3_address1,
        a_3_ce1,
        a_3_q1,
        b_0_address0,
        b_0_ce0,
        b_0_q0,
        b_0_address1,
        b_0_ce1,
        b_0_q1,
        b_1_address0,
        b_1_ce0,
        b_1_q0,
        b_1_address1,
        b_1_ce1,
        b_1_q1,
        b_2_address0,
        b_2_ce0,
        b_2_q0,
        b_2_address1,
        b_2_ce1,
        b_2_q1,
        b_3_address0,
        b_3_ce0,
        b_3_q0,
        b_3_address1,
        b_3_ce1,
        b_3_q1,
        s,
        s_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [0:0] a_0_address0;
output   a_0_ce0;
input  [15:0] a_0_q0;
output  [0:0] a_0_address1;
output   a_0_ce1;
input  [15:0] a_0_q1;
output  [0:0] a_1_address0;
output   a_1_ce0;
input  [15:0] a_1_q0;
output  [0:0] a_1_address1;
output   a_1_ce1;
input  [15:0] a_1_q1;
output  [0:0] a_2_address0;
output   a_2_ce0;
input  [15:0] a_2_q0;
output  [0:0] a_2_address1;
output   a_2_ce1;
input  [15:0] a_2_q1;
output  [0:0] a_3_address0;
output   a_3_ce0;
input  [15:0] a_3_q0;
output  [0:0] a_3_address1;
output   a_3_ce1;
input  [15:0] a_3_q1;
output  [0:0] b_0_address0;
output   b_0_ce0;
input  [15:0] b_0_q0;
output  [0:0] b_0_address1;
output   b_0_ce1;
input  [15:0] b_0_q1;
output  [0:0] b_1_address0;
output   b_1_ce0;
input  [15:0] b_1_q0;
output  [0:0] b_1_address1;
output   b_1_ce1;
input  [15:0] b_1_q1;
output  [0:0] b_2_address0;
output   b_2_ce0;
input  [15:0] b_2_q0;
output  [0:0] b_2_address1;
output   b_2_ce1;
input  [15:0] b_2_q1;
output  [0:0] b_3_address0;
output   b_3_ce0;
input  [15:0] b_3_q0;
output  [0:0] b_3_address1;
output   b_3_ce1;
input  [15:0] b_3_q1;
output  [15:0] s;
output   s_ap_vld;

reg ap_idle;
reg a_0_ce0;
reg a_0_ce1;
reg a_1_ce0;
reg a_1_ce1;
reg a_2_ce0;
reg a_2_ce1;
reg a_3_ce0;
reg a_3_ce1;
reg b_0_ce0;
reg b_0_ce1;
reg b_1_ce0;
reg b_1_ce1;
reg b_2_ce0;
reg b_2_ce1;
reg b_3_ce0;
reg b_3_ce1;
reg s_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] tmp_8_fu_801_p3;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [0:0] do_init_reg_303;
wire    ap_block_pp0_stage0_11001;
reg   [2:0] i1_reg_318;
reg   [15:0] b_3_load_1_phi_reg_555;
reg   [15:0] a_3_load_1_phi_reg_568;
reg   [15:0] b_3_load_phi_reg_581;
reg   [15:0] a_3_load_phi_reg_594;
reg   [15:0] b_2_load_1_phi_reg_607;
reg   [15:0] b_1_load_1_phi_reg_620;
reg   [15:0] b_0_load_1_phi_reg_633;
reg   [15:0] a_2_load_1_phi_reg_646;
reg   [15:0] a_1_load_1_phi_reg_659;
reg   [15:0] a_0_load_1_phi_reg_672;
reg   [15:0] b_2_load_phi_reg_685;
reg   [15:0] b_1_load_phi_reg_698;
reg   [15:0] b_0_load_phi_reg_711;
reg   [15:0] a_2_load_phi_reg_724;
reg   [15:0] a_1_load_phi_reg_737;
reg   [15:0] a_0_load_phi_reg_750;
reg   [15:0] acc_V2_reg_763;
reg   [1:0] lshr_ln_reg_1025;
wire   [2:0] trunc_ln6_fu_797_p1;
reg   [2:0] trunc_ln6_reg_1034;
reg   [0:0] tmp_8_reg_1039;
reg   [0:0] tmp_8_reg_1039_pp0_iter1_reg;
reg   [0:0] tmp_8_reg_1039_pp0_iter2_reg;
reg   [0:0] tmp_8_reg_1039_pp0_iter3_reg;
reg   [0:0] tmp_8_reg_1039_pp0_iter4_reg;
reg   [0:0] tmp_8_reg_1039_pp0_iter5_reg;
reg   [0:0] tmp_8_reg_1039_pp0_iter6_reg;
reg   [0:0] tmp_8_reg_1039_pp0_iter7_reg;
wire  signed [15:0] tmp_fu_809_p5;
reg  signed [15:0] tmp_reg_1043;
wire  signed [15:0] tmp_1_fu_820_p5;
reg  signed [15:0] tmp_1_reg_1048;
wire  signed [15:0] tmp_2_fu_831_p5;
reg  signed [15:0] tmp_2_reg_1053;
reg  signed [15:0] tmp_2_reg_1053_pp0_iter2_reg;
reg  signed [15:0] tmp_2_reg_1053_pp0_iter3_reg;
wire  signed [15:0] tmp_3_fu_842_p5;
reg  signed [15:0] tmp_3_reg_1058;
reg  signed [15:0] tmp_3_reg_1058_pp0_iter2_reg;
reg  signed [15:0] tmp_3_reg_1058_pp0_iter3_reg;
wire  signed [15:0] tmp_4_fu_858_p6;
reg  signed [15:0] tmp_4_reg_1063;
wire  signed [15:0] tmp_5_fu_872_p6;
reg  signed [15:0] tmp_5_reg_1068;
wire  signed [15:0] tmp_6_fu_886_p6;
reg  signed [15:0] tmp_6_reg_1073;
reg  signed [15:0] tmp_6_reg_1073_pp0_iter2_reg;
reg  signed [15:0] tmp_6_reg_1073_pp0_iter3_reg;
wire  signed [15:0] tmp_7_fu_900_p6;
reg  signed [15:0] tmp_7_reg_1078;
reg  signed [15:0] tmp_7_reg_1078_pp0_iter2_reg;
reg  signed [15:0] tmp_7_reg_1078_pp0_iter3_reg;
wire  signed [15:0] grp_fu_927_p2;
reg   [15:0] mul_ln859_reg_1083;
wire  signed [15:0] grp_fu_931_p2;
reg   [15:0] mul_ln859_2_reg_1088;
wire   [15:0] grp_fu_935_p3;
reg  signed [15:0] add_ln859_reg_1093;
wire   [15:0] grp_fu_940_p3;
reg  signed [15:0] add_ln859_1_reg_1098;
wire   [15:0] acc_V_fu_918_p2;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_i1_phi_fu_321_p6;
reg   [15:0] ap_phi_mux_b_3_load_1_phi_phi_fu_559_p4;
wire   [15:0] ap_phi_reg_pp0_iter1_b_3_load_1_phi_reg_555;
reg   [15:0] ap_phi_mux_a_3_load_1_phi_phi_fu_572_p4;
wire   [15:0] ap_phi_reg_pp0_iter1_a_3_load_1_phi_reg_568;
reg   [15:0] ap_phi_mux_b_3_load_phi_phi_fu_585_p4;
wire   [15:0] ap_phi_reg_pp0_iter1_b_3_load_phi_reg_581;
reg   [15:0] ap_phi_mux_a_3_load_phi_phi_fu_598_p4;
wire   [15:0] ap_phi_reg_pp0_iter1_a_3_load_phi_reg_594;
reg   [15:0] ap_phi_mux_b_2_load_1_phi_phi_fu_611_p4;
wire   [15:0] ap_phi_reg_pp0_iter1_b_2_load_1_phi_reg_607;
reg   [15:0] ap_phi_mux_b_1_load_1_phi_phi_fu_624_p4;
wire   [15:0] ap_phi_reg_pp0_iter1_b_1_load_1_phi_reg_620;
reg   [15:0] ap_phi_mux_b_0_load_1_phi_phi_fu_637_p4;
wire   [15:0] ap_phi_reg_pp0_iter1_b_0_load_1_phi_reg_633;
reg   [15:0] ap_phi_mux_a_2_load_1_phi_phi_fu_650_p4;
wire   [15:0] ap_phi_reg_pp0_iter1_a_2_load_1_phi_reg_646;
reg   [15:0] ap_phi_mux_a_1_load_1_phi_phi_fu_663_p4;
wire   [15:0] ap_phi_reg_pp0_iter1_a_1_load_1_phi_reg_659;
reg   [15:0] ap_phi_mux_a_0_load_1_phi_phi_fu_676_p4;
wire   [15:0] ap_phi_reg_pp0_iter1_a_0_load_1_phi_reg_672;
reg   [15:0] ap_phi_mux_b_2_load_phi_phi_fu_689_p4;
wire   [15:0] ap_phi_reg_pp0_iter1_b_2_load_phi_reg_685;
reg   [15:0] ap_phi_mux_b_1_load_phi_phi_fu_702_p4;
wire   [15:0] ap_phi_reg_pp0_iter1_b_1_load_phi_reg_698;
reg   [15:0] ap_phi_mux_b_0_load_phi_phi_fu_715_p4;
wire   [15:0] ap_phi_reg_pp0_iter1_b_0_load_phi_reg_711;
reg   [15:0] ap_phi_mux_a_2_load_phi_phi_fu_728_p4;
wire   [15:0] ap_phi_reg_pp0_iter1_a_2_load_phi_reg_724;
reg   [15:0] ap_phi_mux_a_1_load_phi_phi_fu_741_p4;
wire   [15:0] ap_phi_reg_pp0_iter1_a_1_load_phi_reg_737;
reg   [15:0] ap_phi_mux_a_0_load_phi_phi_fu_754_p4;
wire   [15:0] ap_phi_reg_pp0_iter1_a_0_load_phi_reg_750;
reg   [15:0] ap_phi_mux_acc_V2_phi_fu_767_p6;
reg    ap_loop_init_pp0_iter1_reg;
reg    ap_loop_init_pp0_iter2_reg;
reg    ap_loop_init_pp0_iter3_reg;
reg    ap_loop_init_pp0_iter4_reg;
reg    ap_loop_init_pp0_iter5_reg;
reg    ap_loop_init_pp0_iter6_reg;
reg    ap_loop_init_pp0_iter7_reg;
reg    ap_loop_init_pp0_iter8_reg;
wire    ap_block_pp0_stage0_01001;
wire   [3:0] i1_cast_fu_777_p1;
wire   [3:0] i_fu_791_p2;
wire   [1:0] or_ln1317_fu_853_p2;
(* use_dsp48 = "no" *) wire   [15:0] add_ln859_2_fu_914_p2;
reg    grp_fu_927_ce;
reg    grp_fu_931_ce;
reg    grp_fu_935_ce;
reg    grp_fu_940_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to7;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_327;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_done_reg = 1'b0;
end

inner_product_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U1(
    .din0(ap_phi_mux_a_0_load_phi_phi_fu_754_p4),
    .din1(16'd0),
    .din2(ap_phi_mux_a_2_load_phi_phi_fu_728_p4),
    .din3(lshr_ln_reg_1025),
    .dout(tmp_fu_809_p5)
);

inner_product_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U2(
    .din0(ap_phi_mux_b_0_load_phi_phi_fu_715_p4),
    .din1(16'd0),
    .din2(ap_phi_mux_b_2_load_phi_phi_fu_689_p4),
    .din3(lshr_ln_reg_1025),
    .dout(tmp_1_fu_820_p5)
);

inner_product_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U3(
    .din0(ap_phi_mux_a_0_load_1_phi_phi_fu_676_p4),
    .din1(16'd0),
    .din2(ap_phi_mux_a_2_load_1_phi_phi_fu_650_p4),
    .din3(lshr_ln_reg_1025),
    .dout(tmp_2_fu_831_p5)
);

inner_product_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U4(
    .din0(ap_phi_mux_b_0_load_1_phi_phi_fu_637_p4),
    .din1(16'd0),
    .din2(ap_phi_mux_b_2_load_1_phi_phi_fu_611_p4),
    .din3(lshr_ln_reg_1025),
    .dout(tmp_3_fu_842_p5)
);

inner_product_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U5(
    .din0(16'd0),
    .din1(ap_phi_mux_a_1_load_phi_phi_fu_741_p4),
    .din2(16'd0),
    .din3(ap_phi_mux_a_3_load_phi_phi_fu_598_p4),
    .din4(or_ln1317_fu_853_p2),
    .dout(tmp_4_fu_858_p6)
);

inner_product_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U6(
    .din0(16'd0),
    .din1(ap_phi_mux_b_1_load_phi_phi_fu_702_p4),
    .din2(16'd0),
    .din3(ap_phi_mux_b_3_load_phi_phi_fu_585_p4),
    .din4(or_ln1317_fu_853_p2),
    .dout(tmp_5_fu_872_p6)
);

inner_product_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U7(
    .din0(16'd0),
    .din1(ap_phi_mux_a_1_load_1_phi_phi_fu_663_p4),
    .din2(16'd0),
    .din3(ap_phi_mux_a_3_load_1_phi_phi_fu_572_p4),
    .din4(or_ln1317_fu_853_p2),
    .dout(tmp_6_fu_886_p6)
);

inner_product_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U8(
    .din0(16'd0),
    .din1(ap_phi_mux_b_1_load_1_phi_phi_fu_624_p4),
    .din2(16'd0),
    .din3(ap_phi_mux_b_3_load_1_phi_phi_fu_559_p4),
    .din4(or_ln1317_fu_853_p2),
    .dout(tmp_7_fu_900_p6)
);

inner_product_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_1_reg_1048),
    .din1(tmp_reg_1043),
    .ce(grp_fu_927_ce),
    .dout(grp_fu_927_p2)
);

inner_product_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_5_reg_1068),
    .din1(tmp_4_reg_1063),
    .ce(grp_fu_931_ce),
    .dout(grp_fu_931_p2)
);

inner_product_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_3_reg_1058_pp0_iter3_reg),
    .din1(tmp_2_reg_1053_pp0_iter3_reg),
    .din2(mul_ln859_reg_1083),
    .ce(grp_fu_935_ce),
    .dout(grp_fu_935_p3)
);

inner_product_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_7_reg_1078_pp0_iter3_reg),
    .din1(tmp_6_reg_1073_pp0_iter3_reg),
    .din2(mul_ln859_2_reg_1088),
    .ce(grp_fu_940_ce),
    .dout(grp_fu_940_p3)
);

inner_product_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(1'b1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_327)) begin
        if ((do_init_reg_303 == 1'd0)) begin
            a_0_load_1_phi_reg_672 <= a_0_load_1_phi_reg_672;
        end else if ((do_init_reg_303 == 1'd1)) begin
            a_0_load_1_phi_reg_672 <= a_0_q0;
        end else if (~(tmp_8_reg_1039 == 1'd1)) begin
            a_0_load_1_phi_reg_672 <= ap_phi_reg_pp0_iter1_a_0_load_1_phi_reg_672;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_327)) begin
        if ((do_init_reg_303 == 1'd0)) begin
            a_0_load_phi_reg_750 <= a_0_load_phi_reg_750;
        end else if ((do_init_reg_303 == 1'd1)) begin
            a_0_load_phi_reg_750 <= a_0_q1;
        end else if (~(tmp_8_reg_1039 == 1'd1)) begin
            a_0_load_phi_reg_750 <= ap_phi_reg_pp0_iter1_a_0_load_phi_reg_750;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_327)) begin
        if ((do_init_reg_303 == 1'd0)) begin
            a_1_load_1_phi_reg_659 <= a_1_load_1_phi_reg_659;
        end else if ((do_init_reg_303 == 1'd1)) begin
            a_1_load_1_phi_reg_659 <= a_1_q0;
        end else if (~(tmp_8_reg_1039 == 1'd1)) begin
            a_1_load_1_phi_reg_659 <= ap_phi_reg_pp0_iter1_a_1_load_1_phi_reg_659;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_327)) begin
        if ((do_init_reg_303 == 1'd0)) begin
            a_1_load_phi_reg_737 <= a_1_load_phi_reg_737;
        end else if ((do_init_reg_303 == 1'd1)) begin
            a_1_load_phi_reg_737 <= a_1_q1;
        end else if (~(tmp_8_reg_1039 == 1'd1)) begin
            a_1_load_phi_reg_737 <= ap_phi_reg_pp0_iter1_a_1_load_phi_reg_737;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_327)) begin
        if ((do_init_reg_303 == 1'd0)) begin
            a_2_load_1_phi_reg_646 <= a_2_load_1_phi_reg_646;
        end else if ((do_init_reg_303 == 1'd1)) begin
            a_2_load_1_phi_reg_646 <= a_2_q0;
        end else if (~(tmp_8_reg_1039 == 1'd1)) begin
            a_2_load_1_phi_reg_646 <= ap_phi_reg_pp0_iter1_a_2_load_1_phi_reg_646;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_327)) begin
        if ((do_init_reg_303 == 1'd0)) begin
            a_2_load_phi_reg_724 <= a_2_load_phi_reg_724;
        end else if ((do_init_reg_303 == 1'd1)) begin
            a_2_load_phi_reg_724 <= a_2_q1;
        end else if (~(tmp_8_reg_1039 == 1'd1)) begin
            a_2_load_phi_reg_724 <= ap_phi_reg_pp0_iter1_a_2_load_phi_reg_724;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_327)) begin
        if ((do_init_reg_303 == 1'd0)) begin
            a_3_load_1_phi_reg_568 <= a_3_load_1_phi_reg_568;
        end else if ((do_init_reg_303 == 1'd1)) begin
            a_3_load_1_phi_reg_568 <= a_3_q0;
        end else if (~(tmp_8_reg_1039 == 1'd1)) begin
            a_3_load_1_phi_reg_568 <= ap_phi_reg_pp0_iter1_a_3_load_1_phi_reg_568;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_327)) begin
        if ((do_init_reg_303 == 1'd0)) begin
            a_3_load_phi_reg_594 <= a_3_load_phi_reg_594;
        end else if ((do_init_reg_303 == 1'd1)) begin
            a_3_load_phi_reg_594 <= a_3_q1;
        end else if (~(tmp_8_reg_1039 == 1'd1)) begin
            a_3_load_phi_reg_594 <= ap_phi_reg_pp0_iter1_a_3_load_phi_reg_594;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        if ((tmp_8_reg_1039_pp0_iter7_reg == 1'd1)) begin
            acc_V2_reg_763 <= 16'd0;
        end else if ((tmp_8_reg_1039_pp0_iter7_reg == 1'd0)) begin
            acc_V2_reg_763 <= acc_V_fu_918_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b0))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_327)) begin
        if ((do_init_reg_303 == 1'd0)) begin
            b_0_load_1_phi_reg_633 <= b_0_load_1_phi_reg_633;
        end else if ((do_init_reg_303 == 1'd1)) begin
            b_0_load_1_phi_reg_633 <= b_0_q0;
        end else if (~(tmp_8_reg_1039 == 1'd1)) begin
            b_0_load_1_phi_reg_633 <= ap_phi_reg_pp0_iter1_b_0_load_1_phi_reg_633;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_327)) begin
        if ((do_init_reg_303 == 1'd0)) begin
            b_0_load_phi_reg_711 <= b_0_load_phi_reg_711;
        end else if ((do_init_reg_303 == 1'd1)) begin
            b_0_load_phi_reg_711 <= b_0_q1;
        end else if (~(tmp_8_reg_1039 == 1'd1)) begin
            b_0_load_phi_reg_711 <= ap_phi_reg_pp0_iter1_b_0_load_phi_reg_711;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_327)) begin
        if ((do_init_reg_303 == 1'd0)) begin
            b_1_load_1_phi_reg_620 <= b_1_load_1_phi_reg_620;
        end else if ((do_init_reg_303 == 1'd1)) begin
            b_1_load_1_phi_reg_620 <= b_1_q0;
        end else if (~(tmp_8_reg_1039 == 1'd1)) begin
            b_1_load_1_phi_reg_620 <= ap_phi_reg_pp0_iter1_b_1_load_1_phi_reg_620;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_327)) begin
        if ((do_init_reg_303 == 1'd0)) begin
            b_1_load_phi_reg_698 <= b_1_load_phi_reg_698;
        end else if ((do_init_reg_303 == 1'd1)) begin
            b_1_load_phi_reg_698 <= b_1_q1;
        end else if (~(tmp_8_reg_1039 == 1'd1)) begin
            b_1_load_phi_reg_698 <= ap_phi_reg_pp0_iter1_b_1_load_phi_reg_698;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_327)) begin
        if ((do_init_reg_303 == 1'd0)) begin
            b_2_load_1_phi_reg_607 <= b_2_load_1_phi_reg_607;
        end else if ((do_init_reg_303 == 1'd1)) begin
            b_2_load_1_phi_reg_607 <= b_2_q0;
        end else if (~(tmp_8_reg_1039 == 1'd1)) begin
            b_2_load_1_phi_reg_607 <= ap_phi_reg_pp0_iter1_b_2_load_1_phi_reg_607;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_327)) begin
        if ((do_init_reg_303 == 1'd0)) begin
            b_2_load_phi_reg_685 <= b_2_load_phi_reg_685;
        end else if ((do_init_reg_303 == 1'd1)) begin
            b_2_load_phi_reg_685 <= b_2_q1;
        end else if (~(tmp_8_reg_1039 == 1'd1)) begin
            b_2_load_phi_reg_685 <= ap_phi_reg_pp0_iter1_b_2_load_phi_reg_685;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_327)) begin
        if ((do_init_reg_303 == 1'd0)) begin
            b_3_load_1_phi_reg_555 <= b_3_load_1_phi_reg_555;
        end else if ((do_init_reg_303 == 1'd1)) begin
            b_3_load_1_phi_reg_555 <= b_3_q0;
        end else if (~(tmp_8_reg_1039 == 1'd1)) begin
            b_3_load_1_phi_reg_555 <= ap_phi_reg_pp0_iter1_b_3_load_1_phi_reg_555;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_327)) begin
        if ((do_init_reg_303 == 1'd0)) begin
            b_3_load_phi_reg_581 <= b_3_load_phi_reg_581;
        end else if ((do_init_reg_303 == 1'd1)) begin
            b_3_load_phi_reg_581 <= b_3_q1;
        end else if (~(tmp_8_reg_1039 == 1'd1)) begin
            b_3_load_phi_reg_581 <= ap_phi_reg_pp0_iter1_b_3_load_phi_reg_581;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_8_reg_1039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        do_init_reg_303 <= 1'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_8_reg_1039 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        do_init_reg_303 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_8_reg_1039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i1_reg_318 <= trunc_ln6_reg_1034;
    end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_8_reg_1039 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        i1_reg_318 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        add_ln859_1_reg_1098 <= grp_fu_940_p3;
        add_ln859_reg_1093 <= grp_fu_935_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_init_pp0_iter1_reg <= ap_loop_init;
        ap_loop_init_pp0_iter2_reg <= ap_loop_init_pp0_iter1_reg;
        lshr_ln_reg_1025 <= {{ap_phi_mux_i1_phi_fu_321_p6[2:1]}};
        tmp_1_reg_1048 <= tmp_1_fu_820_p5;
        tmp_2_reg_1053 <= tmp_2_fu_831_p5;
        tmp_3_reg_1058 <= tmp_3_fu_842_p5;
        tmp_4_reg_1063 <= tmp_4_fu_858_p6;
        tmp_5_reg_1068 <= tmp_5_fu_872_p6;
        tmp_6_reg_1073 <= tmp_6_fu_886_p6;
        tmp_7_reg_1078 <= tmp_7_fu_900_p6;
        tmp_8_reg_1039 <= i_fu_791_p2[32'd3];
        tmp_8_reg_1039_pp0_iter1_reg <= tmp_8_reg_1039;
        tmp_reg_1043 <= tmp_fu_809_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_init_pp0_iter3_reg <= ap_loop_init_pp0_iter2_reg;
        ap_loop_init_pp0_iter4_reg <= ap_loop_init_pp0_iter3_reg;
        ap_loop_init_pp0_iter5_reg <= ap_loop_init_pp0_iter4_reg;
        ap_loop_init_pp0_iter6_reg <= ap_loop_init_pp0_iter5_reg;
        ap_loop_init_pp0_iter7_reg <= ap_loop_init_pp0_iter6_reg;
        ap_loop_init_pp0_iter8_reg <= ap_loop_init_pp0_iter7_reg;
        mul_ln859_2_reg_1088 <= grp_fu_931_p2;
        mul_ln859_reg_1083 <= grp_fu_927_p2;
        tmp_2_reg_1053_pp0_iter2_reg <= tmp_2_reg_1053;
        tmp_2_reg_1053_pp0_iter3_reg <= tmp_2_reg_1053_pp0_iter2_reg;
        tmp_3_reg_1058_pp0_iter2_reg <= tmp_3_reg_1058;
        tmp_3_reg_1058_pp0_iter3_reg <= tmp_3_reg_1058_pp0_iter2_reg;
        tmp_6_reg_1073_pp0_iter2_reg <= tmp_6_reg_1073;
        tmp_6_reg_1073_pp0_iter3_reg <= tmp_6_reg_1073_pp0_iter2_reg;
        tmp_7_reg_1078_pp0_iter2_reg <= tmp_7_reg_1078;
        tmp_7_reg_1078_pp0_iter3_reg <= tmp_7_reg_1078_pp0_iter2_reg;
        tmp_8_reg_1039_pp0_iter2_reg <= tmp_8_reg_1039_pp0_iter1_reg;
        tmp_8_reg_1039_pp0_iter3_reg <= tmp_8_reg_1039_pp0_iter2_reg;
        tmp_8_reg_1039_pp0_iter4_reg <= tmp_8_reg_1039_pp0_iter3_reg;
        tmp_8_reg_1039_pp0_iter5_reg <= tmp_8_reg_1039_pp0_iter4_reg;
        tmp_8_reg_1039_pp0_iter6_reg <= tmp_8_reg_1039_pp0_iter5_reg;
        tmp_8_reg_1039_pp0_iter7_reg <= tmp_8_reg_1039_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln6_reg_1034 <= trunc_ln6_fu_797_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_0_ce0 = 1'b1;
    end else begin
        a_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_0_ce1 = 1'b1;
    end else begin
        a_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_1_ce0 = 1'b1;
    end else begin
        a_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_1_ce1 = 1'b1;
    end else begin
        a_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_2_ce0 = 1'b1;
    end else begin
        a_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_2_ce1 = 1'b1;
    end else begin
        a_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_3_ce0 = 1'b1;
    end else begin
        a_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_3_ce1 = 1'b1;
    end else begin
        a_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_8_fu_801_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to7 = 1'b1;
    end else begin
        ap_idle_pp0_0to7 = 1'b0;
    end
end

always @ (*) begin
    if ((do_init_reg_303 == 1'd0)) begin
        ap_phi_mux_a_0_load_1_phi_phi_fu_676_p4 = a_0_load_1_phi_reg_672;
    end else if ((do_init_reg_303 == 1'd1)) begin
        ap_phi_mux_a_0_load_1_phi_phi_fu_676_p4 = a_0_q0;
    end else begin
        ap_phi_mux_a_0_load_1_phi_phi_fu_676_p4 = ap_phi_reg_pp0_iter1_a_0_load_1_phi_reg_672;
    end
end

always @ (*) begin
    if ((do_init_reg_303 == 1'd0)) begin
        ap_phi_mux_a_0_load_phi_phi_fu_754_p4 = a_0_load_phi_reg_750;
    end else if ((do_init_reg_303 == 1'd1)) begin
        ap_phi_mux_a_0_load_phi_phi_fu_754_p4 = a_0_q1;
    end else begin
        ap_phi_mux_a_0_load_phi_phi_fu_754_p4 = ap_phi_reg_pp0_iter1_a_0_load_phi_reg_750;
    end
end

always @ (*) begin
    if ((do_init_reg_303 == 1'd0)) begin
        ap_phi_mux_a_1_load_1_phi_phi_fu_663_p4 = a_1_load_1_phi_reg_659;
    end else if ((do_init_reg_303 == 1'd1)) begin
        ap_phi_mux_a_1_load_1_phi_phi_fu_663_p4 = a_1_q0;
    end else begin
        ap_phi_mux_a_1_load_1_phi_phi_fu_663_p4 = ap_phi_reg_pp0_iter1_a_1_load_1_phi_reg_659;
    end
end

always @ (*) begin
    if ((do_init_reg_303 == 1'd0)) begin
        ap_phi_mux_a_1_load_phi_phi_fu_741_p4 = a_1_load_phi_reg_737;
    end else if ((do_init_reg_303 == 1'd1)) begin
        ap_phi_mux_a_1_load_phi_phi_fu_741_p4 = a_1_q1;
    end else begin
        ap_phi_mux_a_1_load_phi_phi_fu_741_p4 = ap_phi_reg_pp0_iter1_a_1_load_phi_reg_737;
    end
end

always @ (*) begin
    if ((do_init_reg_303 == 1'd0)) begin
        ap_phi_mux_a_2_load_1_phi_phi_fu_650_p4 = a_2_load_1_phi_reg_646;
    end else if ((do_init_reg_303 == 1'd1)) begin
        ap_phi_mux_a_2_load_1_phi_phi_fu_650_p4 = a_2_q0;
    end else begin
        ap_phi_mux_a_2_load_1_phi_phi_fu_650_p4 = ap_phi_reg_pp0_iter1_a_2_load_1_phi_reg_646;
    end
end

always @ (*) begin
    if ((do_init_reg_303 == 1'd0)) begin
        ap_phi_mux_a_2_load_phi_phi_fu_728_p4 = a_2_load_phi_reg_724;
    end else if ((do_init_reg_303 == 1'd1)) begin
        ap_phi_mux_a_2_load_phi_phi_fu_728_p4 = a_2_q1;
    end else begin
        ap_phi_mux_a_2_load_phi_phi_fu_728_p4 = ap_phi_reg_pp0_iter1_a_2_load_phi_reg_724;
    end
end

always @ (*) begin
    if ((do_init_reg_303 == 1'd0)) begin
        ap_phi_mux_a_3_load_1_phi_phi_fu_572_p4 = a_3_load_1_phi_reg_568;
    end else if ((do_init_reg_303 == 1'd1)) begin
        ap_phi_mux_a_3_load_1_phi_phi_fu_572_p4 = a_3_q0;
    end else begin
        ap_phi_mux_a_3_load_1_phi_phi_fu_572_p4 = ap_phi_reg_pp0_iter1_a_3_load_1_phi_reg_568;
    end
end

always @ (*) begin
    if ((do_init_reg_303 == 1'd0)) begin
        ap_phi_mux_a_3_load_phi_phi_fu_598_p4 = a_3_load_phi_reg_594;
    end else if ((do_init_reg_303 == 1'd1)) begin
        ap_phi_mux_a_3_load_phi_phi_fu_598_p4 = a_3_q1;
    end else begin
        ap_phi_mux_a_3_load_phi_phi_fu_598_p4 = ap_phi_reg_pp0_iter1_a_3_load_phi_reg_594;
    end
end

always @ (*) begin
    if ((ap_loop_init_pp0_iter8_reg == 1'b1)) begin
        ap_phi_mux_acc_V2_phi_fu_767_p6 = 16'd0;
    end else begin
        ap_phi_mux_acc_V2_phi_fu_767_p6 = acc_V2_reg_763;
    end
end

always @ (*) begin
    if ((do_init_reg_303 == 1'd0)) begin
        ap_phi_mux_b_0_load_1_phi_phi_fu_637_p4 = b_0_load_1_phi_reg_633;
    end else if ((do_init_reg_303 == 1'd1)) begin
        ap_phi_mux_b_0_load_1_phi_phi_fu_637_p4 = b_0_q0;
    end else begin
        ap_phi_mux_b_0_load_1_phi_phi_fu_637_p4 = ap_phi_reg_pp0_iter1_b_0_load_1_phi_reg_633;
    end
end

always @ (*) begin
    if ((do_init_reg_303 == 1'd0)) begin
        ap_phi_mux_b_0_load_phi_phi_fu_715_p4 = b_0_load_phi_reg_711;
    end else if ((do_init_reg_303 == 1'd1)) begin
        ap_phi_mux_b_0_load_phi_phi_fu_715_p4 = b_0_q1;
    end else begin
        ap_phi_mux_b_0_load_phi_phi_fu_715_p4 = ap_phi_reg_pp0_iter1_b_0_load_phi_reg_711;
    end
end

always @ (*) begin
    if ((do_init_reg_303 == 1'd0)) begin
        ap_phi_mux_b_1_load_1_phi_phi_fu_624_p4 = b_1_load_1_phi_reg_620;
    end else if ((do_init_reg_303 == 1'd1)) begin
        ap_phi_mux_b_1_load_1_phi_phi_fu_624_p4 = b_1_q0;
    end else begin
        ap_phi_mux_b_1_load_1_phi_phi_fu_624_p4 = ap_phi_reg_pp0_iter1_b_1_load_1_phi_reg_620;
    end
end

always @ (*) begin
    if ((do_init_reg_303 == 1'd0)) begin
        ap_phi_mux_b_1_load_phi_phi_fu_702_p4 = b_1_load_phi_reg_698;
    end else if ((do_init_reg_303 == 1'd1)) begin
        ap_phi_mux_b_1_load_phi_phi_fu_702_p4 = b_1_q1;
    end else begin
        ap_phi_mux_b_1_load_phi_phi_fu_702_p4 = ap_phi_reg_pp0_iter1_b_1_load_phi_reg_698;
    end
end

always @ (*) begin
    if ((do_init_reg_303 == 1'd0)) begin
        ap_phi_mux_b_2_load_1_phi_phi_fu_611_p4 = b_2_load_1_phi_reg_607;
    end else if ((do_init_reg_303 == 1'd1)) begin
        ap_phi_mux_b_2_load_1_phi_phi_fu_611_p4 = b_2_q0;
    end else begin
        ap_phi_mux_b_2_load_1_phi_phi_fu_611_p4 = ap_phi_reg_pp0_iter1_b_2_load_1_phi_reg_607;
    end
end

always @ (*) begin
    if ((do_init_reg_303 == 1'd0)) begin
        ap_phi_mux_b_2_load_phi_phi_fu_689_p4 = b_2_load_phi_reg_685;
    end else if ((do_init_reg_303 == 1'd1)) begin
        ap_phi_mux_b_2_load_phi_phi_fu_689_p4 = b_2_q1;
    end else begin
        ap_phi_mux_b_2_load_phi_phi_fu_689_p4 = ap_phi_reg_pp0_iter1_b_2_load_phi_reg_685;
    end
end

always @ (*) begin
    if ((do_init_reg_303 == 1'd0)) begin
        ap_phi_mux_b_3_load_1_phi_phi_fu_559_p4 = b_3_load_1_phi_reg_555;
    end else if ((do_init_reg_303 == 1'd1)) begin
        ap_phi_mux_b_3_load_1_phi_phi_fu_559_p4 = b_3_q0;
    end else begin
        ap_phi_mux_b_3_load_1_phi_phi_fu_559_p4 = ap_phi_reg_pp0_iter1_b_3_load_1_phi_reg_555;
    end
end

always @ (*) begin
    if ((do_init_reg_303 == 1'd0)) begin
        ap_phi_mux_b_3_load_phi_phi_fu_585_p4 = b_3_load_phi_reg_581;
    end else if ((do_init_reg_303 == 1'd1)) begin
        ap_phi_mux_b_3_load_phi_phi_fu_585_p4 = b_3_q1;
    end else begin
        ap_phi_mux_b_3_load_phi_phi_fu_585_p4 = ap_phi_reg_pp0_iter1_b_3_load_phi_reg_581;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (tmp_8_reg_1039 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i1_phi_fu_321_p6 = trunc_ln6_reg_1034;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (tmp_8_reg_1039 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_phi_mux_i1_phi_fu_321_p6 = 3'd0;
    end else begin
        ap_phi_mux_i1_phi_fu_321_p6 = i1_reg_318;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0_0to7 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_0_ce0 = 1'b1;
    end else begin
        b_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_0_ce1 = 1'b1;
    end else begin
        b_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_1_ce0 = 1'b1;
    end else begin
        b_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_1_ce1 = 1'b1;
    end else begin
        b_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_2_ce0 = 1'b1;
    end else begin
        b_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_2_ce1 = 1'b1;
    end else begin
        b_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_3_ce0 = 1'b1;
    end else begin
        b_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_3_ce1 = 1'b1;
    end else begin
        b_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_927_ce = 1'b1;
    end else begin
        grp_fu_927_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_931_ce = 1'b1;
    end else begin
        grp_fu_931_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_935_ce = 1'b1;
    end else begin
        grp_fu_935_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_940_ce = 1'b1;
    end else begin
        grp_fu_940_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (tmp_8_reg_1039_pp0_iter7_reg == 1'd1))) begin
        s_ap_vld = 1'b1;
    end else begin
        s_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_address0 = 64'd1;

assign a_0_address1 = 64'd0;

assign a_1_address0 = 64'd1;

assign a_1_address1 = 64'd0;

assign a_2_address0 = 64'd1;

assign a_2_address1 = 64'd0;

assign a_3_address0 = 64'd1;

assign a_3_address1 = 64'd0;

assign acc_V_fu_918_p2 = (ap_phi_mux_acc_V2_phi_fu_767_p6 + add_ln859_2_fu_914_p2);

assign add_ln859_2_fu_914_p2 = ($signed(add_ln859_1_reg_1098) + $signed(add_ln859_reg_1093));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_327 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter1_a_0_load_1_phi_reg_672 = 'bx;

assign ap_phi_reg_pp0_iter1_a_0_load_phi_reg_750 = 'bx;

assign ap_phi_reg_pp0_iter1_a_1_load_1_phi_reg_659 = 'bx;

assign ap_phi_reg_pp0_iter1_a_1_load_phi_reg_737 = 'bx;

assign ap_phi_reg_pp0_iter1_a_2_load_1_phi_reg_646 = 'bx;

assign ap_phi_reg_pp0_iter1_a_2_load_phi_reg_724 = 'bx;

assign ap_phi_reg_pp0_iter1_a_3_load_1_phi_reg_568 = 'bx;

assign ap_phi_reg_pp0_iter1_a_3_load_phi_reg_594 = 'bx;

assign ap_phi_reg_pp0_iter1_b_0_load_1_phi_reg_633 = 'bx;

assign ap_phi_reg_pp0_iter1_b_0_load_phi_reg_711 = 'bx;

assign ap_phi_reg_pp0_iter1_b_1_load_1_phi_reg_620 = 'bx;

assign ap_phi_reg_pp0_iter1_b_1_load_phi_reg_698 = 'bx;

assign ap_phi_reg_pp0_iter1_b_2_load_1_phi_reg_607 = 'bx;

assign ap_phi_reg_pp0_iter1_b_2_load_phi_reg_685 = 'bx;

assign ap_phi_reg_pp0_iter1_b_3_load_1_phi_reg_555 = 'bx;

assign ap_phi_reg_pp0_iter1_b_3_load_phi_reg_581 = 'bx;

assign b_0_address0 = 64'd1;

assign b_0_address1 = 64'd0;

assign b_1_address0 = 64'd1;

assign b_1_address1 = 64'd0;

assign b_2_address0 = 64'd1;

assign b_2_address1 = 64'd0;

assign b_3_address0 = 64'd1;

assign b_3_address1 = 64'd0;

assign i1_cast_fu_777_p1 = ap_phi_mux_i1_phi_fu_321_p6;

assign i_fu_791_p2 = (i1_cast_fu_777_p1 + 4'd4);

assign or_ln1317_fu_853_p2 = (lshr_ln_reg_1025 | 2'd1);

assign s = (ap_phi_mux_acc_V2_phi_fu_767_p6 + add_ln859_2_fu_914_p2);

assign tmp_8_fu_801_p3 = i_fu_791_p2[32'd3];

assign trunc_ln6_fu_797_p1 = i_fu_791_p2[2:0];

endmodule //inner_product
