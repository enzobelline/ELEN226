// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="loop_imperfect_loop_imperfect,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k70t-fbg676-2,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.845625,HLS_SYN_LAT=42,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=289,HLS_SYN_LUT=702,HLS_VERSION=2022_1}" *)

module loop_imperfect (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_address0,
        A_ce0,
        A_q0,
        A_address1,
        A_ce1,
        A_q1,
        B_address0,
        B_ce0,
        B_we0,
        B_d0
);

parameter    ap_ST_fsm_state1 = 21'd1;
parameter    ap_ST_fsm_state2 = 21'd2;
parameter    ap_ST_fsm_state3 = 21'd4;
parameter    ap_ST_fsm_state4 = 21'd8;
parameter    ap_ST_fsm_state5 = 21'd16;
parameter    ap_ST_fsm_state6 = 21'd32;
parameter    ap_ST_fsm_state7 = 21'd64;
parameter    ap_ST_fsm_state8 = 21'd128;
parameter    ap_ST_fsm_state9 = 21'd256;
parameter    ap_ST_fsm_state10 = 21'd512;
parameter    ap_ST_fsm_state11 = 21'd1024;
parameter    ap_ST_fsm_state12 = 21'd2048;
parameter    ap_ST_fsm_state13 = 21'd4096;
parameter    ap_ST_fsm_state14 = 21'd8192;
parameter    ap_ST_fsm_state15 = 21'd16384;
parameter    ap_ST_fsm_state16 = 21'd32768;
parameter    ap_ST_fsm_state17 = 21'd65536;
parameter    ap_ST_fsm_state18 = 21'd131072;
parameter    ap_ST_fsm_state19 = 21'd262144;
parameter    ap_ST_fsm_state20 = 21'd524288;
parameter    ap_ST_fsm_state21 = 21'd1048576;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] A_address0;
output   A_ce0;
input  [4:0] A_q0;
output  [4:0] A_address1;
output   A_ce1;
input  [4:0] A_q1;
output  [4:0] B_address0;
output   B_ce0;
output   B_we0;
output  [5:0] B_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] A_address0;
reg A_ce0;
reg[4:0] A_address1;
reg A_ce1;

(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg  signed [4:0] reg_289;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
reg   [4:0] reg_294;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
reg  signed [4:0] reg_299;
wire    ap_CS_fsm_state4;
reg  signed [4:0] reg_303;
wire    ap_CS_fsm_state6;
reg   [4:0] A_load_1_reg_928;
reg   [4:0] A_load_5_reg_963;
wire  signed [10:0] grp_fu_862_p3;
reg  signed [10:0] add_ln886_11_reg_974;
reg  signed [4:0] A_load_4_reg_979;
wire    ap_CS_fsm_state7;
reg   [4:0] A_load_7_reg_990;
wire   [8:0] sub_ln886_1_fu_421_p2;
reg   [8:0] sub_ln886_1_reg_1000;
wire   [8:0] sub_ln886_2_fu_443_p2;
reg   [8:0] sub_ln886_2_reg_1005;
wire   [8:0] add_ln886_3_fu_463_p2;
reg   [8:0] add_ln886_3_reg_1025;
wire  signed [10:0] grp_fu_870_p3;
reg  signed [10:0] add_ln886_12_reg_1030;
wire   [9:0] add_ln886_6_fu_516_p2;
reg   [9:0] add_ln886_6_reg_1045;
wire   [8:0] add_ln886_7_fu_522_p2;
reg   [8:0] add_ln886_7_reg_1050;
wire   [10:0] add_ln886_9_fu_560_p2;
reg   [10:0] add_ln886_9_reg_1065;
wire   [9:0] sub_ln886_4_fu_597_p2;
reg   [9:0] sub_ln886_4_reg_1070;
wire   [9:0] sub_ln886_5_fu_619_p2;
reg   [9:0] sub_ln886_5_reg_1075;
wire  signed [9:0] grp_fu_877_p3;
reg  signed [9:0] add_ln886_16_reg_1085;
wire   [6:0] add_ln886_19_fu_639_p2;
reg   [6:0] add_ln886_19_reg_1090;
wire   [6:0] add_ln886_fu_698_p2;
reg   [6:0] add_ln886_reg_1095;
wire   [10:0] add_ln886_14_fu_710_p2;
reg   [10:0] add_ln886_14_reg_1100;
wire   [10:0] add_ln886_20_fu_728_p2;
reg   [10:0] add_ln886_20_reg_1105;
wire   [10:0] add_ln886_4_fu_762_p2;
reg   [10:0] add_ln886_4_reg_1110;
wire    ap_CS_fsm_state13;
wire   [11:0] add_ln886_21_fu_783_p2;
reg   [11:0] add_ln886_21_reg_1115;
wire  signed [11:0] add_ln886_22_fu_801_p2;
reg  signed [11:0] add_ln886_22_reg_1120;
wire    ap_CS_fsm_state14;
reg   [0:0] tmp_reg_1125;
wire    ap_CS_fsm_state15;
wire   [24:0] trunc_ln1559_fu_817_p1;
reg   [24:0] trunc_ln1559_reg_1136;
wire    ap_CS_fsm_state18;
reg   [5:0] tmp_2_reg_1141;
wire   [5:0] sub_ln1559_1_fu_850_p2;
reg   [5:0] sub_ln1559_1_reg_1147;
wire    ap_CS_fsm_state19;
wire   [5:0] select_ln1559_1_fu_856_p3;
reg   [5:0] select_ln1559_1_reg_1152;
wire    ap_CS_fsm_state20;
wire    grp_loop_imperfect_Pipeline_LOOP_I_fu_282_ap_start;
wire    grp_loop_imperfect_Pipeline_LOOP_I_fu_282_ap_done;
wire    grp_loop_imperfect_Pipeline_LOOP_I_fu_282_ap_idle;
wire    grp_loop_imperfect_Pipeline_LOOP_I_fu_282_ap_ready;
wire   [4:0] grp_loop_imperfect_Pipeline_LOOP_I_fu_282_B_address0;
wire    grp_loop_imperfect_Pipeline_LOOP_I_fu_282_B_ce0;
wire    grp_loop_imperfect_Pipeline_LOOP_I_fu_282_B_we0;
wire   [5:0] grp_loop_imperfect_Pipeline_LOOP_I_fu_282_B_d0;
reg    grp_loop_imperfect_Pipeline_LOOP_I_fu_282_ap_start_reg;
wire    ap_CS_fsm_state21;
wire   [8:0] shl_ln886_10_fu_316_p3;
wire   [6:0] shl_ln886_11_fu_328_p3;
wire  signed [9:0] sext_ln886_10_fu_324_p1;
wire  signed [9:0] sext_ln886_11_fu_336_p1;
wire  signed [9:0] sub_ln886_3_fu_340_p2;
wire   [6:0] shl_ln886_1_fu_354_p3;
wire  signed [7:0] sext_ln886_1_fu_362_p1;
wire  signed [7:0] sext_ln886_fu_350_p1;
wire   [7:0] sub_ln886_fu_366_p2;
wire   [6:0] shl_ln886_2_fu_376_p3;
wire   [6:0] shl_ln886_3_fu_388_p3;
wire   [7:0] shl_ln886_4_fu_399_p3;
wire   [5:0] shl_ln886_5_fu_410_p3;
wire  signed [8:0] sext_ln886_3_fu_406_p1;
wire  signed [8:0] sext_ln886_4_fu_417_p1;
wire  signed [4:0] sext_ln886_5_fu_427_p0;
wire  signed [4:0] shl_ln886_6_fu_431_p1;
wire   [7:0] shl_ln886_6_fu_431_p3;
wire  signed [8:0] sext_ln886_6_fu_439_p1;
wire  signed [8:0] sext_ln886_5_fu_427_p1;
wire  signed [7:0] sext_ln232_3_fu_384_p1;
wire  signed [7:0] sext_ln232_4_fu_395_p1;
wire   [7:0] add_ln886_2_fu_453_p2;
wire  signed [8:0] sext_ln886_22_fu_459_p1;
wire  signed [8:0] sext_ln232_2_fu_372_p1;
wire   [7:0] shl_ln886_7_fu_475_p3;
wire   [7:0] shl_ln886_9_fu_486_p3;
wire   [5:0] shl_ln886_s_fu_498_p3;
wire  signed [9:0] sext_ln232_6_fu_472_p1;
wire  signed [9:0] sext_ln232_7_fu_482_p1;
wire   [9:0] add_ln886_5_fu_510_p2;
wire  signed [9:0] sext_ln232_5_fu_469_p1;
wire  signed [8:0] sext_ln232_9_fu_506_p1;
wire  signed [8:0] sext_ln886_8_fu_494_p1;
wire  signed [4:0] shl_ln886_8_fu_532_p1;
wire   [7:0] shl_ln886_8_fu_532_p3;
wire  signed [9:0] sext_ln886_26_fu_547_p1;
wire  signed [9:0] sext_ln232_8_fu_540_p1;
wire   [9:0] add_ln886_8_fu_550_p2;
wire  signed [10:0] sext_ln886_27_fu_556_p1;
wire  signed [10:0] sext_ln886_25_fu_544_p1;
wire  signed [4:0] sext_ln886_7_fu_569_p0;
wire   [8:0] shl_ln886_12_fu_573_p3;
wire   [5:0] shl_ln886_13_fu_585_p3;
wire  signed [9:0] sext_ln886_13_fu_581_p1;
wire  signed [9:0] sext_ln886_14_fu_593_p1;
wire  signed [4:0] sext_ln886_15_fu_603_p0;
wire  signed [4:0] shl_ln886_14_fu_607_p1;
wire   [8:0] shl_ln886_14_fu_607_p3;
wire  signed [9:0] sext_ln886_16_fu_615_p1;
wire  signed [9:0] sext_ln886_15_fu_603_p1;
wire  signed [5:0] sext_ln886_7_fu_569_p1;
wire  signed [5:0] sext_ln886_17_fu_625_p1;
wire   [5:0] add_ln886_18_fu_629_p2;
wire  signed [6:0] sext_ln886_32_fu_635_p1;
wire  signed [6:0] sext_ln886_2_fu_566_p1;
wire   [5:0] shl_ln_fu_645_p3;
wire   [8:0] shl_ln886_15_fu_662_p3;
wire   [8:0] shl_ln886_16_fu_674_p3;
wire   [5:0] shl_ln886_18_fu_686_p3;
wire  signed [6:0] sext_ln232_17_fu_694_p1;
wire  signed [6:0] sext_ln232_1_fu_652_p1;
wire  signed [10:0] sext_ln232_14_fu_659_p1;
wire  signed [10:0] sext_ln232_15_fu_670_p1;
wire   [10:0] add_ln886_13_fu_704_p2;
wire  signed [10:0] sext_ln232_13_fu_656_p1;
wire  signed [10:0] sext_ln886_31_fu_716_p1;
wire  signed [10:0] sext_ln232_16_fu_682_p1;
wire  signed [10:0] sext_ln886_33_fu_725_p1;
wire   [10:0] add_ln886_17_fu_719_p2;
wire   [8:0] shl_ln886_17_fu_734_p3;
wire  signed [9:0] sext_ln886_20_fu_746_p1;
wire  signed [9:0] sext_ln886_18_fu_742_p1;
wire   [9:0] add_ln886_1_fu_749_p2;
wire  signed [10:0] sext_ln886_23_fu_759_p1;
wire  signed [10:0] sext_ln886_21_fu_755_p1;
wire  signed [11:0] sext_ln886_30_fu_771_p1;
wire  signed [11:0] sext_ln886_29_fu_768_p1;
wire  signed [11:0] sext_ln886_34_fu_780_p1;
wire   [11:0] add_ln886_15_fu_774_p2;
wire  signed [11:0] sext_ln886_28_fu_792_p1;
wire  signed [11:0] sext_ln886_24_fu_789_p1;
wire   [11:0] add_ln886_10_fu_795_p2;
wire  signed [25:0] grp_fu_885_p2;
wire   [24:0] sub_ln1559_fu_829_p2;
wire   [5:0] tmp_1_fu_834_p4;
wire   [5:0] select_ln1559_fu_844_p3;
wire   [3:0] grp_fu_862_p1;
wire   [3:0] grp_fu_870_p1;
wire   [4:0] grp_fu_877_p1;
wire   [12:0] grp_fu_885_p1;
reg   [20:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
reg    ap_ST_fsm_state21_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 21'd1;
#0 grp_loop_imperfect_Pipeline_LOOP_I_fu_282_ap_start_reg = 1'b0;
end

loop_imperfect_loop_imperfect_Pipeline_LOOP_I grp_loop_imperfect_Pipeline_LOOP_I_fu_282(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_loop_imperfect_Pipeline_LOOP_I_fu_282_ap_start),
    .ap_done(grp_loop_imperfect_Pipeline_LOOP_I_fu_282_ap_done),
    .ap_idle(grp_loop_imperfect_Pipeline_LOOP_I_fu_282_ap_idle),
    .ap_ready(grp_loop_imperfect_Pipeline_LOOP_I_fu_282_ap_ready),
    .B_address0(grp_loop_imperfect_Pipeline_LOOP_I_fu_282_B_address0),
    .B_ce0(grp_loop_imperfect_Pipeline_LOOP_I_fu_282_B_ce0),
    .B_we0(grp_loop_imperfect_Pipeline_LOOP_I_fu_282_B_we0),
    .B_d0(grp_loop_imperfect_Pipeline_LOOP_I_fu_282_B_d0),
    .select_ln1559_1(select_ln1559_1_reg_1152)
);

loop_imperfect_mac_muladd_5s_4ns_10s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 11 ))
mac_muladd_5s_4ns_10s_11_4_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(A_q0),
    .din1(grp_fu_862_p1),
    .din2(sub_ln886_3_fu_340_p2),
    .ce(1'b1),
    .dout(grp_fu_862_p3)
);

loop_imperfect_mac_muladd_5s_4ns_11s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mac_muladd_5s_4ns_11s_11_4_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_289),
    .din1(grp_fu_870_p1),
    .din2(add_ln886_11_reg_974),
    .ce(1'b1),
    .dout(grp_fu_870_p3)
);

loop_imperfect_mac_muladd_5s_5ns_5s_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
mac_muladd_5s_5ns_5s_10_4_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_299),
    .din1(grp_fu_877_p1),
    .din2(reg_289),
    .ce(1'b1),
    .dout(grp_fu_877_p3)
);

loop_imperfect_mul_mul_12s_13ns_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_mul_12s_13ns_26_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln886_22_reg_1120),
    .din1(grp_fu_885_p1),
    .ce(1'b1),
    .dout(grp_fu_885_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_loop_imperfect_Pipeline_LOOP_I_fu_282_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state20)) begin
            grp_loop_imperfect_Pipeline_LOOP_I_fu_282_ap_start_reg <= 1'b1;
        end else if ((grp_loop_imperfect_Pipeline_LOOP_I_fu_282_ap_ready == 1'b1)) begin
            grp_loop_imperfect_Pipeline_LOOP_I_fu_282_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        reg_289 <= A_q1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_289 <= A_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        reg_294 <= A_q0;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5))) begin
        reg_294 <= A_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        reg_303 <= A_q1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_303 <= A_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        A_load_1_reg_928 <= A_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        A_load_4_reg_979 <= A_q0;
        A_load_7_reg_990 <= A_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        A_load_5_reg_963 <= A_q1;
        add_ln886_11_reg_974 <= grp_fu_862_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln886_12_reg_1030 <= grp_fu_870_p3;
        add_ln886_3_reg_1025 <= add_ln886_3_fu_463_p2;
        sub_ln886_1_reg_1000[8 : 1] <= sub_ln886_1_fu_421_p2[8 : 1];
        sub_ln886_2_reg_1005 <= sub_ln886_2_fu_443_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln886_14_reg_1100 <= add_ln886_14_fu_710_p2;
        add_ln886_20_reg_1105 <= add_ln886_20_fu_728_p2;
        add_ln886_reg_1095[6 : 1] <= add_ln886_fu_698_p2[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln886_16_reg_1085 <= grp_fu_877_p3;
        add_ln886_19_reg_1090 <= add_ln886_19_fu_639_p2;
        sub_ln886_4_reg_1070[9 : 1] <= sub_ln886_4_fu_597_p2[9 : 1];
        sub_ln886_5_reg_1075 <= sub_ln886_5_fu_619_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_ln886_21_reg_1115 <= add_ln886_21_fu_783_p2;
        add_ln886_4_reg_1110 <= add_ln886_4_fu_762_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln886_22_reg_1120 <= add_ln886_22_fu_801_p2;
        tmp_reg_1125 <= add_ln886_22_fu_801_p2[32'd11];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln886_6_reg_1045 <= add_ln886_6_fu_516_p2;
        add_ln886_7_reg_1050[8 : 1] <= add_ln886_7_fu_522_p2[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln886_9_reg_1065 <= add_ln886_9_fu_560_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_299 <= A_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        select_ln1559_1_reg_1152 <= select_ln1559_1_fu_856_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1125 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        sub_ln1559_1_reg_1147 <= sub_ln1559_1_fu_850_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_2_reg_1141 <= {{grp_fu_885_p2[22:17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1125 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        trunc_ln1559_reg_1136 <= trunc_ln1559_fu_817_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        A_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        A_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        A_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        A_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        A_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        A_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        A_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        A_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        A_address0 = 64'd11;
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        A_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        A_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        A_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        A_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        A_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        A_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        A_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        A_address1 = 64'd12;
    end else begin
        A_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9))) begin
        A_ce1 = 1'b1;
    end else begin
        A_ce1 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

always @ (*) begin
    if ((grp_loop_imperfect_Pipeline_LOOP_I_fu_282_ap_done == 1'b0)) begin
        ap_ST_fsm_state21_blk = 1'b1;
    end else begin
        ap_ST_fsm_state21_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((grp_loop_imperfect_Pipeline_LOOP_I_fu_282_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_loop_imperfect_Pipeline_LOOP_I_fu_282_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((grp_loop_imperfect_Pipeline_LOOP_I_fu_282_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_address0 = grp_loop_imperfect_Pipeline_LOOP_I_fu_282_B_address0;

assign B_ce0 = grp_loop_imperfect_Pipeline_LOOP_I_fu_282_B_ce0;

assign B_d0 = grp_loop_imperfect_Pipeline_LOOP_I_fu_282_B_d0;

assign B_we0 = grp_loop_imperfect_Pipeline_LOOP_I_fu_282_B_we0;

assign add_ln886_10_fu_795_p2 = ($signed(sext_ln886_28_fu_792_p1) + $signed(sext_ln886_24_fu_789_p1));

assign add_ln886_13_fu_704_p2 = ($signed(sext_ln232_14_fu_659_p1) + $signed(sext_ln232_15_fu_670_p1));

assign add_ln886_14_fu_710_p2 = ($signed(add_ln886_13_fu_704_p2) + $signed(sext_ln232_13_fu_656_p1));

assign add_ln886_15_fu_774_p2 = ($signed(sext_ln886_30_fu_771_p1) + $signed(sext_ln886_29_fu_768_p1));

assign add_ln886_17_fu_719_p2 = ($signed(sext_ln886_31_fu_716_p1) + $signed(sext_ln232_16_fu_682_p1));

assign add_ln886_18_fu_629_p2 = ($signed(sext_ln886_7_fu_569_p1) + $signed(sext_ln886_17_fu_625_p1));

assign add_ln886_19_fu_639_p2 = ($signed(sext_ln886_32_fu_635_p1) + $signed(sext_ln886_2_fu_566_p1));

assign add_ln886_1_fu_749_p2 = ($signed(sext_ln886_20_fu_746_p1) + $signed(sext_ln886_18_fu_742_p1));

assign add_ln886_20_fu_728_p2 = ($signed(sext_ln886_33_fu_725_p1) + $signed(add_ln886_17_fu_719_p2));

assign add_ln886_21_fu_783_p2 = ($signed(sext_ln886_34_fu_780_p1) + $signed(add_ln886_15_fu_774_p2));

assign add_ln886_22_fu_801_p2 = (add_ln886_21_reg_1115 + add_ln886_10_fu_795_p2);

assign add_ln886_2_fu_453_p2 = ($signed(sext_ln232_3_fu_384_p1) + $signed(sext_ln232_4_fu_395_p1));

assign add_ln886_3_fu_463_p2 = ($signed(sext_ln886_22_fu_459_p1) + $signed(sext_ln232_2_fu_372_p1));

assign add_ln886_4_fu_762_p2 = ($signed(sext_ln886_23_fu_759_p1) + $signed(sext_ln886_21_fu_755_p1));

assign add_ln886_5_fu_510_p2 = ($signed(sext_ln232_6_fu_472_p1) + $signed(sext_ln232_7_fu_482_p1));

assign add_ln886_6_fu_516_p2 = ($signed(add_ln886_5_fu_510_p2) + $signed(sext_ln232_5_fu_469_p1));

assign add_ln886_7_fu_522_p2 = ($signed(sext_ln232_9_fu_506_p1) + $signed(sext_ln886_8_fu_494_p1));

assign add_ln886_8_fu_550_p2 = ($signed(sext_ln886_26_fu_547_p1) + $signed(sext_ln232_8_fu_540_p1));

assign add_ln886_9_fu_560_p2 = ($signed(sext_ln886_27_fu_556_p1) + $signed(sext_ln886_25_fu_544_p1));

assign add_ln886_fu_698_p2 = ($signed(sext_ln232_17_fu_694_p1) + $signed(sext_ln232_1_fu_652_p1));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_fu_862_p1 = 10'd13;

assign grp_fu_870_p1 = 10'd11;

assign grp_fu_877_p1 = 10'd19;

assign grp_fu_885_p1 = 26'd6554;

assign grp_loop_imperfect_Pipeline_LOOP_I_fu_282_ap_start = grp_loop_imperfect_Pipeline_LOOP_I_fu_282_ap_start_reg;

assign select_ln1559_1_fu_856_p3 = ((tmp_reg_1125[0:0] == 1'b1) ? sub_ln1559_1_reg_1147 : tmp_2_reg_1141);

assign select_ln1559_fu_844_p3 = ((tmp_reg_1125[0:0] == 1'b1) ? tmp_1_fu_834_p4 : tmp_2_reg_1141);

assign sext_ln232_13_fu_656_p1 = $signed(sub_ln886_4_reg_1070);

assign sext_ln232_14_fu_659_p1 = $signed(sub_ln886_5_reg_1075);

assign sext_ln232_15_fu_670_p1 = $signed(shl_ln886_15_fu_662_p3);

assign sext_ln232_16_fu_682_p1 = $signed(shl_ln886_16_fu_674_p3);

assign sext_ln232_17_fu_694_p1 = $signed(shl_ln886_18_fu_686_p3);

assign sext_ln232_1_fu_652_p1 = $signed(shl_ln_fu_645_p3);

assign sext_ln232_2_fu_372_p1 = $signed(sub_ln886_fu_366_p2);

assign sext_ln232_3_fu_384_p1 = $signed(shl_ln886_2_fu_376_p3);

assign sext_ln232_4_fu_395_p1 = $signed(shl_ln886_3_fu_388_p3);

assign sext_ln232_5_fu_469_p1 = $signed(sub_ln886_1_reg_1000);

assign sext_ln232_6_fu_472_p1 = $signed(sub_ln886_2_reg_1005);

assign sext_ln232_7_fu_482_p1 = $signed(shl_ln886_7_fu_475_p3);

assign sext_ln232_8_fu_540_p1 = $signed(shl_ln886_8_fu_532_p3);

assign sext_ln232_9_fu_506_p1 = $signed(shl_ln886_s_fu_498_p3);

assign sext_ln886_10_fu_324_p1 = $signed(shl_ln886_10_fu_316_p3);

assign sext_ln886_11_fu_336_p1 = $signed(shl_ln886_11_fu_328_p3);

assign sext_ln886_13_fu_581_p1 = $signed(shl_ln886_12_fu_573_p3);

assign sext_ln886_14_fu_593_p1 = $signed(shl_ln886_13_fu_585_p3);

assign sext_ln886_15_fu_603_p0 = reg_299;

assign sext_ln886_15_fu_603_p1 = sext_ln886_15_fu_603_p0;

assign sext_ln886_16_fu_615_p1 = $signed(shl_ln886_14_fu_607_p3);

assign sext_ln886_17_fu_625_p1 = reg_303;

assign sext_ln886_18_fu_742_p1 = $signed(shl_ln886_17_fu_734_p3);

assign sext_ln886_1_fu_362_p1 = $signed(shl_ln886_1_fu_354_p3);

assign sext_ln886_20_fu_746_p1 = $signed(add_ln886_reg_1095);

assign sext_ln886_21_fu_755_p1 = $signed(add_ln886_1_fu_749_p2);

assign sext_ln886_22_fu_459_p1 = $signed(add_ln886_2_fu_453_p2);

assign sext_ln886_23_fu_759_p1 = $signed(add_ln886_3_reg_1025);

assign sext_ln886_24_fu_789_p1 = $signed(add_ln886_4_reg_1110);

assign sext_ln886_25_fu_544_p1 = $signed(add_ln886_6_reg_1045);

assign sext_ln886_26_fu_547_p1 = $signed(add_ln886_7_reg_1050);

assign sext_ln886_27_fu_556_p1 = $signed(add_ln886_8_fu_550_p2);

assign sext_ln886_28_fu_792_p1 = $signed(add_ln886_9_reg_1065);

assign sext_ln886_29_fu_768_p1 = add_ln886_12_reg_1030;

assign sext_ln886_2_fu_566_p1 = A_load_4_reg_979;

assign sext_ln886_30_fu_771_p1 = $signed(add_ln886_14_reg_1100);

assign sext_ln886_31_fu_716_p1 = add_ln886_16_reg_1085;

assign sext_ln886_32_fu_635_p1 = $signed(add_ln886_18_fu_629_p2);

assign sext_ln886_33_fu_725_p1 = $signed(add_ln886_19_reg_1090);

assign sext_ln886_34_fu_780_p1 = $signed(add_ln886_20_reg_1105);

assign sext_ln886_3_fu_406_p1 = $signed(shl_ln886_4_fu_399_p3);

assign sext_ln886_4_fu_417_p1 = $signed(shl_ln886_5_fu_410_p3);

assign sext_ln886_5_fu_427_p0 = A_q0;

assign sext_ln886_5_fu_427_p1 = sext_ln886_5_fu_427_p0;

assign sext_ln886_6_fu_439_p1 = $signed(shl_ln886_6_fu_431_p3);

assign sext_ln886_7_fu_569_p0 = reg_294;

assign sext_ln886_7_fu_569_p1 = sext_ln886_7_fu_569_p0;

assign sext_ln886_8_fu_494_p1 = $signed(shl_ln886_9_fu_486_p3);

assign sext_ln886_fu_350_p1 = reg_303;

assign shl_ln886_10_fu_316_p3 = {{reg_294}, {4'd0}};

assign shl_ln886_11_fu_328_p3 = {{reg_294}, {2'd0}};

assign shl_ln886_12_fu_573_p3 = {{reg_289}, {4'd0}};

assign shl_ln886_13_fu_585_p3 = {{reg_289}, {1'd0}};

assign shl_ln886_14_fu_607_p1 = reg_299;

assign shl_ln886_14_fu_607_p3 = {{shl_ln886_14_fu_607_p1}, {4'd0}};

assign shl_ln886_15_fu_662_p3 = {{reg_289}, {4'd0}};

assign shl_ln886_16_fu_674_p3 = {{reg_303}, {4'd0}};

assign shl_ln886_17_fu_734_p3 = {{reg_289}, {4'd0}};

assign shl_ln886_18_fu_686_p3 = {{A_q0}, {1'd0}};

assign shl_ln886_1_fu_354_p3 = {{reg_303}, {2'd0}};

assign shl_ln886_2_fu_376_p3 = {{reg_294}, {2'd0}};

assign shl_ln886_3_fu_388_p3 = {{A_load_4_reg_979}, {2'd0}};

assign shl_ln886_4_fu_399_p3 = {{A_load_5_reg_963}, {3'd0}};

assign shl_ln886_5_fu_410_p3 = {{A_load_5_reg_963}, {1'd0}};

assign shl_ln886_6_fu_431_p1 = A_q0;

assign shl_ln886_6_fu_431_p3 = {{shl_ln886_6_fu_431_p1}, {3'd0}};

assign shl_ln886_7_fu_475_p3 = {{A_load_7_reg_990}, {3'd0}};

assign shl_ln886_8_fu_532_p1 = reg_294;

assign shl_ln886_8_fu_532_p3 = {{shl_ln886_8_fu_532_p1}, {3'd0}};

assign shl_ln886_9_fu_486_p3 = {{reg_294}, {3'd0}};

assign shl_ln886_s_fu_498_p3 = {{reg_294}, {1'd0}};

assign shl_ln_fu_645_p3 = {{A_load_1_reg_928}, {1'd0}};

assign sub_ln1559_1_fu_850_p2 = (6'd0 - select_ln1559_fu_844_p3);

assign sub_ln1559_fu_829_p2 = (25'd0 - trunc_ln1559_reg_1136);

assign sub_ln886_1_fu_421_p2 = ($signed(sext_ln886_3_fu_406_p1) - $signed(sext_ln886_4_fu_417_p1));

assign sub_ln886_2_fu_443_p2 = ($signed(sext_ln886_6_fu_439_p1) - $signed(sext_ln886_5_fu_427_p1));

assign sub_ln886_3_fu_340_p2 = ($signed(sext_ln886_10_fu_324_p1) - $signed(sext_ln886_11_fu_336_p1));

assign sub_ln886_4_fu_597_p2 = ($signed(sext_ln886_13_fu_581_p1) - $signed(sext_ln886_14_fu_593_p1));

assign sub_ln886_5_fu_619_p2 = ($signed(sext_ln886_16_fu_615_p1) - $signed(sext_ln886_15_fu_603_p1));

assign sub_ln886_fu_366_p2 = ($signed(sext_ln886_1_fu_362_p1) - $signed(sext_ln886_fu_350_p1));

assign tmp_1_fu_834_p4 = {{sub_ln1559_fu_829_p2[22:17]}};

assign trunc_ln1559_fu_817_p1 = grp_fu_885_p2[24:0];

always @ (posedge ap_clk) begin
    sub_ln886_1_reg_1000[0] <= 1'b0;
    add_ln886_7_reg_1050[0] <= 1'b0;
    sub_ln886_4_reg_1070[0] <= 1'b0;
    add_ln886_reg_1095[0] <= 1'b0;
end

endmodule //loop_imperfect
